// Generated by Apple Swift version 2.2 (swiftlang-703.0.18.8 clang-703.0.31)
#pragma clang diagnostic push

#if defined(__has_include) && __has_include(<swift/objc-prologue.h>)
# include <swift/objc-prologue.h>
#endif

#pragma clang diagnostic ignored "-Wauto-import"
#include <objc/NSObject.h>
#include <stdint.h>
#include <stddef.h>
#include <stdbool.h>

#if !defined(SWIFT_TYPEDEFS)
# define SWIFT_TYPEDEFS 1
# if defined(__has_include) && __has_include(<uchar.h>)
#  include <uchar.h>
# elif !defined(__cplusplus) || __cplusplus < 201103L
typedef uint_least16_t char16_t;
typedef uint_least32_t char32_t;
# endif
typedef float swift_float2  __attribute__((__ext_vector_type__(2)));
typedef float swift_float3  __attribute__((__ext_vector_type__(3)));
typedef float swift_float4  __attribute__((__ext_vector_type__(4)));
typedef double swift_double2  __attribute__((__ext_vector_type__(2)));
typedef double swift_double3  __attribute__((__ext_vector_type__(3)));
typedef double swift_double4  __attribute__((__ext_vector_type__(4)));
typedef int swift_int2  __attribute__((__ext_vector_type__(2)));
typedef int swift_int3  __attribute__((__ext_vector_type__(3)));
typedef int swift_int4  __attribute__((__ext_vector_type__(4)));
#endif

#if !defined(SWIFT_PASTE)
# define SWIFT_PASTE_HELPER(x, y) x##y
# define SWIFT_PASTE(x, y) SWIFT_PASTE_HELPER(x, y)
#endif
#if !defined(SWIFT_METATYPE)
# define SWIFT_METATYPE(X) Class
#endif

#if defined(__has_attribute) && __has_attribute(objc_runtime_name)
# define SWIFT_RUNTIME_NAME(X) __attribute__((objc_runtime_name(X)))
#else
# define SWIFT_RUNTIME_NAME(X)
#endif
#if defined(__has_attribute) && __has_attribute(swift_name)
# define SWIFT_COMPILE_NAME(X) __attribute__((swift_name(X)))
#else
# define SWIFT_COMPILE_NAME(X)
#endif
#if !defined(SWIFT_CLASS_EXTRA)
# define SWIFT_CLASS_EXTRA
#endif
#if !defined(SWIFT_PROTOCOL_EXTRA)
# define SWIFT_PROTOCOL_EXTRA
#endif
#if !defined(SWIFT_ENUM_EXTRA)
# define SWIFT_ENUM_EXTRA
#endif
#if !defined(SWIFT_CLASS)
# if defined(__has_attribute) && __has_attribute(objc_subclassing_restricted)
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) __attribute__((objc_subclassing_restricted)) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# else
#  define SWIFT_CLASS(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
#  define SWIFT_CLASS_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_CLASS_EXTRA
# endif
#endif

#if !defined(SWIFT_PROTOCOL)
# define SWIFT_PROTOCOL(SWIFT_NAME) SWIFT_RUNTIME_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
# define SWIFT_PROTOCOL_NAMED(SWIFT_NAME) SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_PROTOCOL_EXTRA
#endif

#if !defined(SWIFT_EXTENSION)
# define SWIFT_EXTENSION(M) SWIFT_PASTE(M##_Swift_, __LINE__)
#endif

#if !defined(OBJC_DESIGNATED_INITIALIZER)
# if defined(__has_attribute) && __has_attribute(objc_designated_initializer)
#  define OBJC_DESIGNATED_INITIALIZER __attribute__((objc_designated_initializer))
# else
#  define OBJC_DESIGNATED_INITIALIZER
# endif
#endif
#if !defined(SWIFT_ENUM)
# define SWIFT_ENUM(_type, _name) enum _name : _type _name; enum SWIFT_ENUM_EXTRA _name : _type
# if defined(__has_feature) && __has_feature(generalized_swift_name)
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) enum _name : _type _name SWIFT_COMPILE_NAME(SWIFT_NAME); enum SWIFT_COMPILE_NAME(SWIFT_NAME) SWIFT_ENUM_EXTRA _name : _type
# else
#  define SWIFT_ENUM_NAMED(_type, _name, SWIFT_NAME) SWIFT_ENUM(_type, _name)
# endif
#endif
#if defined(__has_feature) && __has_feature(modules)
@import ObjectiveC;
#endif

#pragma clang diagnostic ignored "-Wproperty-attribute-mismatch"
#pragma clang diagnostic ignored "-Wduplicate-method-arg"


/// A base class of parameter.
SWIFT_CLASS("_TtC9NOSTRASDK11NTParameter")
@interface NTParameter : NSObject
@end

enum NTCountry : NSInteger;
enum NTFacilityDirection : NSInteger;
@class NTLocation;
enum NTImpedanceMode : NSInteger;
enum NTLanguage : NSInteger;
enum NTTravelMode : NSInteger;


/// Instances of this class represent parameters for NTClosestFacilitySerivce. Parameters specify the criteria for performing a result of the clostest facility. Parameters are passed as an argument to execute: or executeAsync:Completion on NTClosestFacilitySerivce.
SWIFT_CLASS("_TtC9NOSTRASDK26NTClosestFacilityParameter")
@interface NTClosestFacilityParameter : NTParameter

/// Country code.
@property (nonatomic) enum NTCountry country;

/// Options for traveling to or from the facility. Set to "FROMFACILITY" for travel direction from the facility results and "TOFACILITY" for travel direction to facility results, this option is default value.
@property (nonatomic) enum NTFacilityDirection travelDirection;

/// A set of facility.
@property (nonatomic, copy) NSArray<NTLocation *> * _Null_unspecified facilities;

/// A set of incident.
@property (nonatomic, copy) NSArray<NTLocation *> * _Null_unspecified incident;

/// Refer to routing analysis method, set "Time" for quickest driving time and set "Distance" for shortest route. Default impedance is time.
@property (nonatomic) enum NTImpedanceMode impedance;

/// A language of result.
@property (nonatomic) enum NTLanguage language;

/// Maximum returned results of direction to/from facility.
@property (nonatomic) NSInteger targetFacilityCount;

/// Travel mode. The following modes are supported: car, truck, motorcycle, bicycle, and walk. Default mode is car.
@property (nonatomic) enum NTTravelMode travelMode;

/// Driving preference, Default value is "True" for including tolls and vice versa.
@property (nonatomic) BOOL tollRoad;

/// The well-known ID of the spatial reference for the geometries returned with the analysis results.
@property (nonatomic) NSInteger outSR;

/// If cutoff is set, any demand outside all the facilities' impedance cutoffs is not allocated. Cutoff unit depeneds on impedance, if it is set to "Time" the unit is minutes and meters for "Distance"
@property (nonatomic) NSInteger cutOff;

/// Initializes an NTAGSClosestFacilityParameter object.
///
/// \param facilities A set of facility.
///
/// \param facilities A set of incident.
///
/// \returns  A New NTRouteParameter Object.
- (nonnull instancetype)initWithFacilities:(NSArray<NTLocation *> * _Null_unspecified)facilities incident:(NSArray<NTLocation *> * _Null_unspecified)incident OBJC_DESIGNATED_INITIALIZER;
@end



/// Instances of this class represent parameters for NTAGSClosestFacilityService. Parameters specify the criteria for performing a result of the closest facility. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAGSClosestFacilityService.
SWIFT_CLASS("_TtC9NOSTRASDK29NTAGSClosestFacilityParameter")
@interface NTAGSClosestFacilityParameter : NTClosestFacilityParameter

/// Initializes an NTAGSClosestFacilityParameter object.
///
/// \param facilities A set of facility location.
///
/// \param incident A set of incident location.
///
/// \returns  A New NTAGSClosestFacilityParameter Object.
- (nonnull instancetype)initWithFacilities:(NSArray<NTLocation *> * _Nonnull)facilities incident:(NSArray<NTLocation *> * _Nonnull)incident OBJC_DESIGNATED_INITIALIZER;
@end



/// A base class of result
SWIFT_CLASS("_TtC9NOSTRASDK8NTResult")
@interface NTResult : NSObject
@end

@class NTAGSDirection;
@class NTAGSFacility;
@class NTAGSRoute;


/// A result of NTAGSClosestFacilityService
SWIFT_CLASS("_TtC9NOSTRASDK26NTAGSClosestFacilityResult")
@interface NTAGSClosestFacilityResult : NTResult

/// A set of direction.
@property (nonatomic, readonly, copy) NSArray<NTAGSDirection *> * _Null_unspecified directions;

/// A set of facility.
@property (nonatomic, readonly, strong) NTAGSFacility * _Null_unspecified facilities;

/// A set of message.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Null_unspecified messages;

/// Route of closest facility.
@property (nonatomic, readonly, strong) NTAGSRoute * _Null_unspecified routes;

/// This method is able to generate json object that can integrate with AGSClosestFacilityTaskResult.
///
/// \returns  A json object.
- (NSDictionary<NSString *, id> * _Nonnull)toJSON;
@end



/// A base class of service.
SWIFT_CLASS("_TtC9NOSTRASDK9NTService")
@interface NTService : NSObject
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NSError;


/// This service allows you to find closest facilities around any location (incident) on road network by specify how many to find and whether the direction of travel is toward or away from them. For examples of closest facility problems, finding the closest hospital to an accident, the closest police cars to a crime scene, and the closest store to a customer's address. Once you've found the closest facilities, you can display the best route to or from them, return the travel cost for each route, and display directions to each facility. In case you have been authorized to use AEC countries you can search by latitude and longtitude of them. The result of service is in ArcGIS form.
SWIFT_CLASS("_TtC9NOSTRASDK27NTAGSClosestFacilityService")
@interface NTAGSClosestFacilityService : NTService

/// Execute a parameter against the closest facility service. It relies on closest facility service of the web service API. The result returns a set of closest facility matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of closest facility matching specifced creteria.
+ (NTAGSClosestFacilityResult * _Nullable)execute:(NTClosestFacilityParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the service area service. It relies on service area service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the service area service has completely loaded.
/// The method also be called when the service area service has error.
/// This block has a result of area and an information about the error returned by the service.
+ (void)executeAsync:(NTClosestFacilityParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTAGSClosestFacilityResult * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NTAGSDirectionFeature;
@class NTAGSRouteSummary;


/// A NTAGSDirection object.
SWIFT_CLASS("_TtC9NOSTRASDK14NTAGSDirection")
@interface NTAGSDirection : NTResult

/// A set of features
@property (nonatomic, readonly, copy) NSArray<NTAGSDirectionFeature *> * _Null_unspecified features;

/// Route Id.
@property (nonatomic, readonly) NSInteger routeId;

/// Route name
@property (nonatomic, readonly, copy) NSString * _Null_unspecified routeName;

/// A summary of route.
@property (nonatomic, readonly, strong) NTAGSRouteSummary * _Null_unspecified summary;
@end



/// A NTAGSDirectionFeature object.
SWIFT_CLASS("_TtC9NOSTRASDK21NTAGSDirectionFeature")
@interface NTAGSDirectionFeature : NTResult

/// Attributes of direction.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Null_unspecified attributes;

/// Compressed geometry.
@property (nonatomic, readonly, strong) id _Null_unspecified compressedGeometry;

/// Decompressed geometry.
@property (nonatomic, readonly, strong) id _Null_unspecified decompressedGeometry;
@end

@class NTAGSFacilityFeature;
@class NTSpatialReference;


/// A NTAGSFacility object.
SWIFT_CLASS("_TtC9NOSTRASDK13NTAGSFacility")
@interface NTAGSFacility : NTResult

/// A set of feature.
@property (nonatomic, readonly, copy) NSArray<NTAGSFacilityFeature *> * _Null_unspecified features;

/// A type of facility
@property (nonatomic, readonly, copy) NSString * _Null_unspecified geometryType;

/// A spatial reference of facility.
@property (nonatomic, readonly, strong) NTSpatialReference * _Null_unspecified spatialReference;
@end

@class NTPoint;


/// A NTFacilityFeature object.
SWIFT_CLASS("_TtC9NOSTRASDK20NTAGSFacilityFeature")
@interface NTAGSFacilityFeature : NTResult

/// Attributes of facility.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Null_unspecified attributes;

/// A geometry of facility
@property (nonatomic, readonly, strong) NTPoint * _Null_unspecified geometry;
@end

@class NTAGSRouteFeature;


/// A NTAGSRoute object.
SWIFT_CLASS("_TtC9NOSTRASDK10NTAGSRoute")
@interface NTAGSRoute : NTResult

/// A set of route feature.
@property (nonatomic, readonly, copy) NSArray<NTAGSRouteFeature *> * _Null_unspecified features;

/// A set of field alias.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Null_unspecified fieldAliases;

/// A type of geometry.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified geometryType;

/// Has M
@property (nonatomic, readonly) BOOL hasM;

/// A spatial reference of route.
@property (nonatomic, readonly, strong) NTSpatialReference * _Nullable spatialReference;
@end

@class NTAGSRouteGeometry;


/// A NTAGSRouteFeature object.
SWIFT_CLASS("_TtC9NOSTRASDK17NTAGSRouteFeature")
@interface NTAGSRouteFeature : NTResult

/// Attributes of feature.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Null_unspecified attributes;

/// A geometry of route.
@property (nonatomic, readonly, strong) NTAGSRouteGeometry * _Null_unspecified geometry;
@end



/// A NTAGSRouteGeometry object.
SWIFT_CLASS("_TtC9NOSTRASDK18NTAGSRouteGeometry")
@interface NTAGSRouteGeometry : NTResult

/// Has M.
@property (nonatomic, readonly) BOOL hasM;

/// Paths.
@property (nonatomic, readonly, copy) NSArray<NSArray<NSArray<NSNumber *> *> *> * _Null_unspecified paths;
@end

@class NSDate;


/// Instances of this class represent parameters for NTRouteService. Parameters specify the criteria for performing a result of route. Parameters are passed as an argument to execute: or executeAsync:Completion on NTRouteService.
SWIFT_CLASS("_TtC9NOSTRASDK16NTRouteParameter")
@interface NTRouteParameter : NTParameter

/// A set of visiting point.
@property (nonatomic, copy) NSArray<NTLocation *> * _Null_unspecified stops;

/// Travel mode. The following modes are supported: car, truck, motorcycle, bicycle, and walk. Default mode is car.
@property (nonatomic) enum NTTravelMode travelMode;

/// Refer to routing analysis method, set "Time" for quickest driving time and set "Distance" for shortest route. Default impedance is time.
@property (nonatomic) enum NTImpedanceMode impedance;

/// Driving preference, Default value is "True" for including tolls and vice versa.
@property (nonatomic) BOOL tollRoad;

/// This parameter help you to find the most efficient path for visiting a given list of stops. Set to "true", the route solver will optimize sequence to visit the stops for Traveling Salesperson problem. Default value is "false".
@property (nonatomic) BOOL findBestSequence;

/// If true, keeps the first stop fixed in the sequence even when findBestSequence is true. Only applicable if findBestSequence is true. Default value is "false".
@property (nonatomic) BOOL preserveFirstStop;

/// If true, keeps the last stop fixed in the sequence even when findBestSequence is true. Only applicable if findBestSequence is true. Default value is "false"
@property (nonatomic) BOOL preserveLastStop;

/// A language of result.
@property (nonatomic) enum NTLanguage language;

/// Country code.
@property (nonatomic) enum NTCountry country;

/// The well-known ID of the spatial reference for the geometries returned with the analysis results.
@property (nonatomic) NSInteger outSR;

/// A useful feature of the "Route" is the ability to constrain stop visits to certain times of day, or "time windows". Default is "false"
@property (nonatomic) BOOL useTimeWindow;

/// The time that route begins.
@property (nonatomic, strong) NSDate * _Nullable startTime;

/// If false, the result will not be returned direction and route. Making performance of query is better in case you don't want to draw route graphic on the map.
@property (nonatomic) BOOL returnRouteDetail;

/// Initializes an NTRouteParameter object.
///
/// \param stops A set of visiting point.
///
/// \returns  A New NTRouteParameter Object.
- (nonnull instancetype)initWithStops:(NSArray<NTLocation *> * _Null_unspecified)stops OBJC_DESIGNATED_INITIALIZER;
@end



/// Instances of this class represent parameters for NTAGSRouteService. Parameters specify the criteria for performing a result of route. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAGSRouteService.
SWIFT_CLASS("_TtC9NOSTRASDK19NTAGSRouteParameter")
@interface NTAGSRouteParameter : NTRouteParameter

/// Initializes an NTRouteParameter object.
///
/// \param stops A set of visiting point.
///
/// \returns  A New NTRouteParameter Object.
- (nonnull instancetype)initWithStops:(NSArray<NTLocation *> * _Null_unspecified)stops OBJC_DESIGNATED_INITIALIZER;
@end

@class NTAGSStop;


/// A result of ArcGIS Route.
SWIFT_CLASS("_TtC9NOSTRASDK16NTAGSRouteResult")
@interface NTAGSRouteResult : NTResult

/// A set of direction.
@property (nonatomic, readonly, copy) NSArray<NTAGSDirection *> * _Null_unspecified directions;

/// Routes of result
@property (nonatomic, readonly, strong) NTAGSRoute * _Null_unspecified routes;

/// Stops of result
@property (nonatomic, readonly, strong) NTAGSStop * _Null_unspecified stops;

/// This method is able to generate json object that can integrate with AGSRouteTaskResult.
///
/// \returns  A json object.
- (NSDictionary<NSString *, id> * _Nonnull)toJSON;
@end



/// The service allows you to find the best route to get from one location to another or the best way to visit several locations by car, truck, motorcycle, bicycle, or pedestrian. The locations can be specified by using coordinate of points. The best route can be determined for the order of locations as specified by the users. Along with the best route, service provides directions with turn-by-turn text guidance, travel time, and total distance. In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
///
/// <ul><li>The result of service is in ArcGIS form.</li></ul>
SWIFT_CLASS("_TtC9NOSTRASDK17NTAGSRouteService")
@interface NTAGSRouteService : NTService

/// Execute a parameter against the route service. It relies on route service of the web service API. The result returns a set of closest facility matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of route matching specifced creteria.
+ (NTAGSRouteResult * _Nullable)execute:(NTAGSRouteParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the route service. It relies on route service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the route service has completely loaded.
/// The method also be called when the route service has error.
/// This block has a result of route and an information about the error returned by the service.
+ (void)executeAsync:(NTAGSRouteParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTAGSRouteResult * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NTEnvelope;


/// A NTAGSRouteSummary object.
SWIFT_CLASS("_TtC9NOSTRASDK17NTAGSRouteSummary")
@interface NTAGSRouteSummary : NTResult

/// An envelop of route.
@property (nonatomic, readonly, strong) NTEnvelope * _Null_unspecified envelope;

/// A total drive time.
@property (nonatomic, readonly) double totalDriveTime;

/// A total length.
@property (nonatomic, readonly) double totalLength;

/// A total time.
@property (nonatomic, readonly) double totalTime;
@end

@class NTAGSServiceAreaGeoemtry;


/// A NTAGSServiceAreaFeature
SWIFT_CLASS("_TtC9NOSTRASDK23NTAGSServiceAreaFeature")
@interface NTAGSServiceAreaFeature : NTResult

/// Attributes of area.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Null_unspecified attributes;

/// A geometry of area.
@property (nonatomic, readonly, strong) NTAGSServiceAreaGeoemtry * _Null_unspecified gemetry;
@end



/// A NTAGSServiceAreaGeoemtry object.
SWIFT_CLASS("_TtC9NOSTRASDK24NTAGSServiceAreaGeoemtry")
@interface NTAGSServiceAreaGeoemtry : NTResult

/// Rings of area.
@property (nonatomic, readonly, strong) id _Null_unspecified rings;
@end



/// Instances of this class represent parameters for NTServiceAreaService. Parameters specify the criteria for performing a result of service area. Parameters are passed as an argument to execute: or executeAsync:Completion on NTServiceAreaService.
SWIFT_CLASS("_TtC9NOSTRASDK22NTServiceAreaParameter")
@interface NTServiceAreaParameter : NTParameter

/// Country code.
@property (nonatomic) enum NTCountry country;

/// A set of facility.
@property (nonatomic, copy) NSArray<NTLocation *> * _Null_unspecified facilities;

/// Refer to routing analysis method, set "Time" for quickest driving time and set "Distance" for shortest route. Default impedance is time.
@property (nonatomic) enum NTImpedanceMode impedance;

/// A language of result.
@property (nonatomic) enum NTLanguage language;

/// Travel mode. The following modes are supported: car, truck, motorcycle, bicycle, and walk. Default mode is car.
@property (nonatomic) enum NTTravelMode travelMode;

/// The polygon's break range that are related with impedance values indicating the extent of the service area to be calculated. If impedance values is set to "Time", the break range unit is minutes if set to "Distance", the break range unit is kilometer seperate by comma (,). For example [1,3,5]. Possible values are maximum at 5.
@property (nonatomic, copy) NSArray<NSNumber *> * _Null_unspecified breaks;

/// Driving preference, Default value is "True" for including tolls and vice versa.
@property (nonatomic) BOOL tollRoad;

/// The well-known ID of the spatial reference for the geometries returned with the analysis results.
@property (nonatomic) NSInteger outSR;

/// Travel mode. The following modes are supported: car, truck, motorcycle, bicycle, and walk. Default mode is car.
@property (nonatomic) enum NTFacilityDirection travelDirection;

/// Initializes an NTAGSServiceAreaParameter object.
///
/// \param facilities A set of facility.
///
/// \param breaks The polygon's break range that are related with impedance values indicating the extent of the service area to be calculated. If impedance values is set to "Time", the break range unit is minutes if set to "Distance", the break range unit is kilometer seperate by comma (,). For example [1,3,5]. Possible values are maximum at 5.
///
/// \returns  A New NTAGSServiceAreaParameter Object.
- (nonnull instancetype)initWithFacilities:(NSArray<NTLocation *> * _Null_unspecified)facilities breaks:(NSArray<NSNumber *> * _Nonnull)breaks OBJC_DESIGNATED_INITIALIZER;
@end



/// Instances of this class represent parameters for NTAGSServiceArea. Parameters specify the criteria for performing a result of service area. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAGSServiceArea.
SWIFT_CLASS("_TtC9NOSTRASDK25NTAGSServiceAreaParameter")
@interface NTAGSServiceAreaParameter : NTServiceAreaParameter

/// Initializes an NTAGSServiceAreaParameter object.
///
/// \param facilities A set of facility.
///
/// \param breaks The polygon's break range that are related with impedance values indicating the extent of the service area to be calculated. If impedance values is set to "Time", the break range unit is minutes if set to "Distance", the break range unit is kilometer seperate by comma (,). For example [1,3,5]. Possible values are maximum at 5.
///
/// \param facilities A set of facility location.
///
/// \param incident A set of incident location.
///
/// \returns  A New NTAGSClosestFacilityParameter Object.
- (nonnull instancetype)initWithFacilities:(NSArray<NTLocation *> * _Null_unspecified)facilities breaks:(NSArray<NSNumber *> * _Nonnull)breaks OBJC_DESIGNATED_INITIALIZER;
@end



/// A NTAGSServiceAreaPolygons object.
SWIFT_CLASS("_TtC9NOSTRASDK24NTAGSServiceAreaPolygons")
@interface NTAGSServiceAreaPolygons : NTResult

/// Features of area.
@property (nonatomic, readonly, copy) NSArray<NTAGSServiceAreaFeature *> * _Null_unspecified features;

/// Field aliases
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Null_unspecified fieldAliases;

/// Types of geometry
@property (nonatomic, readonly, copy) NSString * _Null_unspecified geometryType;

/// A spatial reference of area.
@property (nonatomic, readonly, strong) NTSpatialReference * _Null_unspecified spatialReference;
@end



/// A NTAGSServiceAreaResult object.
SWIFT_CLASS("_TtC9NOSTRASDK22NTAGSServiceAreaResult")
@interface NTAGSServiceAreaResult : NTResult

/// Messages that return from service.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Null_unspecified messages;

/// A set of service area polygon.
@property (nonatomic, readonly, strong) NTAGSServiceAreaPolygons * _Null_unspecified saPolygons;

/// This method is able to generate json object that can integrate with AGSServiceAreaTaskResult.
///
/// \returns  A json object.
- (NSDictionary<NSString *, id> * _Nonnull)toJSON;
@end



/// This service allows you to find service areas around any location on a road network. For instance, the 30-minute service area for a facility includes all the streets that can be reached within 30 minutes from that facility. These areas are generally used to visualize and measure the ability of facility for serving users or customers. Once service areas are created, you can apply them for identifying how many areas, how many people, or how much of anything else is within that area. In case you have been authorized to use AEC countries you can search by latitude and longtitude of them. The result of service is in ArcGIS form.
SWIFT_CLASS("_TtC9NOSTRASDK23NTAGSServiceAreaService")
@interface NTAGSServiceAreaService : NTService

/// Execute a parameter against the service area service. It relies on service area service of the web service API. The result returns a set of closest facility matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of area matching specifced creteria.
+ (NTAGSServiceAreaResult * _Nullable)execute:(NTAGSServiceAreaParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the service area service. It relies on service area service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the service area service has completely loaded.
/// The method also be called when the service area service has error.
/// This block has a result of area and an information about the error returned by the service.
+ (void)executeAsync:(NTAGSServiceAreaParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTAGSServiceAreaResult * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

@class NTAGSStopFeature;


/// A NTAGSStop object.
SWIFT_CLASS("_TtC9NOSTRASDK9NTAGSStop")
@interface NTAGSStop : NTResult

/// A set of stop feature.
@property (nonatomic, readonly, copy) NSArray<NTAGSStopFeature *> * _Null_unspecified features;

/// A type of geometry.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified geometryType;

/// A spatial reference of geometry.
@property (nonatomic, readonly, strong) NTSpatialReference * _Null_unspecified spatialReference;
@end



/// A NTAGSStopFeature object.
SWIFT_CLASS("_TtC9NOSTRASDK16NTAGSStopFeature")
@interface NTAGSStopFeature : NTResult

/// Attributes of stop feature.
@property (nonatomic, readonly, copy) NSDictionary<NSString *, id> * _Null_unspecified attributes;

/// A point of stop feature.
@property (nonatomic, readonly, strong) NTPoint * _Null_unspecified geometry;
@end


/// An option of address search that used for NTAddressSearchParameter.
typedef SWIFT_ENUM(NSInteger, NTAddressSearchOption) {

/// Search by attribute
  NTAddressSearchOptionSearchByAttribute = 0,

/// Search by keyword
  NTAddressSearchOptionSearchByKeyword = 1,
};



/// Instances of this class represent parameters for NTAddressSearchService. Parameters specify the criteria for performing an address of location. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAddressSearchService.
SWIFT_CLASS("_TtC9NOSTRASDK24NTAddressSearchParameter")
@interface NTAddressSearchParameter : NTParameter

/// A term to be matched with NOSTRA place name, address, road name or etc.
@property (nonatomic, copy) NSString * _Null_unspecified keyword;

/// Province name in Thai.
@property (nonatomic, copy) NSString * _Null_unspecified adminLevel1;

/// District name in Thai.
@property (nonatomic, copy) NSString * _Null_unspecified adminLevel2;

/// Sub district name in Thai.
@property (nonatomic, copy) NSString * _Null_unspecified adminLevel3;

/// House number
@property (nonatomic, copy) NSString * _Null_unspecified houseNo;

/// Moo number
@property (nonatomic, copy) NSString * _Null_unspecified moo;

/// Postcode
@property (nonatomic, copy) NSString * _Null_unspecified postcode;

/// Road name
@property (nonatomic, copy) NSString * _Null_unspecified road;

/// Soi name
@property (nonatomic, copy) NSString * _Null_unspecified soi;

/// Number of record to return. Maximum value is specified by NOSTRA.
@property (nonatomic) NSInteger numReturn;

/// A country that you would like to search.
@property (nonatomic) enum NTCountry country;

/// Initializes an NTAddressSearchParameter object that's initiated to search by using keyword.
///
/// \param keyword A term to be matched with NOSTRA place name, address, road name or etc.
///
/// \returns  A New NTAddressSearchParameter Object.
- (nonnull instancetype)initWithKeyword:(NSString * _Null_unspecified)keyword OBJC_DESIGNATED_INITIALIZER;

/// Initializes an NTAddressSearchParameter object that's initiated to search by using attributes.
///
/// \returns  A New NTAddressSearchParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of address.
SWIFT_CLASS("_TtC9NOSTRASDK21NTAddressSearchResult")
@interface NTAddressSearchResult : NTResult

/// Country name in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel0_E;

/// Country name in local language.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel0_L;

/// Province name in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel1_E;

/// Province name in Local language.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel1_L;

/// District name in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel2_E;

/// District name in Local language.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel2_L;

/// Sub district name in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel3_E;

/// Sub district name in Local language.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel3_L;

/// House number.
@property (nonatomic, readonly, copy) NSString * _Nonnull houseNo;

/// Latitude of place.
@property (nonatomic, readonly) double lat;

/// Longitude of place.
@property (nonatomic, readonly) double lon;

/// Moo number.
@property (nonatomic, readonly, copy) NSString * _Nonnull moo;

/// ID of data.
@property (nonatomic, readonly, copy) NSString * _Nonnull nostraId;

/// Postcode.
@property (nonatomic, readonly, copy) NSString * _Nonnull postcode;

/// Road name in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull road_E;

/// Road name in local language.
@property (nonatomic, readonly, copy) NSString * _Nonnull road_L;

/// SOI name in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull soi_E;

/// SOI name in Thai.
@property (nonatomic, readonly, copy) NSString * _Nonnull soi_L;
@end



/// A set of result return from NTAddressSearchService.
SWIFT_CLASS("_TtC9NOSTRASDK24NTAddressSearchResultSet")
@interface NTAddressSearchResultSet : NTResult

/// A set of result.
@property (nonatomic, readonly, copy) NSArray<NTAddressSearchResult *> * _Nullable results;
@end



/// This service allows you to search for address in Thailand by house number. You can query specified area by sending full-text address including many attributes such as house number, soi, road, sub-district, district, province and postcode in one parameter as a search key word. For better search results, each attribute should be separated with a space character and be defined which attributes are soi, road, sub-district, district or province by adding the administrative prefix such as soi, rd., tambol (ต.), amphur (อ.) or provice (จ.).
SWIFT_CLASS("_TtC9NOSTRASDK22NTAddressSearchService")
@interface NTAddressSearchService : NTService

/// Execute a parameter against the address search service. It relies on address search service of the web service API. The result returns a set of location matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of location matching specifced creteria.
+ (NTAddressSearchResultSet * _Nullable)execute:(NTAddressSearchParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the address search service. It relies on address search service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the address search service has completely loaded.
/// The method also be called when the address search service has error.
/// This block has a set of location and an information about the error returned by the service.
+ (void)executeAsync:(NTAddressSearchParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTAddressSearchResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum NTAdministrativeSort : NSInteger;


/// Instances of this class represent parameters for NTAdministrativeService. Parameters specify the criteria for performing a result of administrative information. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAdministrativeService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTAdministrativeParameter")
@interface NTAdministrativeParameter : NTParameter

/// Refer to province code. You can get Thailand province code that you can get from NTAdministrativeService.
@property (nonatomic, copy) NSString * _Null_unspecified adminLevel1;

/// Refer to district code. You can get Thailand district code that you can get from NTAdministrativeService.
@property (nonatomic, copy) NSString * _Null_unspecified adminLevel2;

/// Country code.
@property (nonatomic) enum NTCountry country;

/// Sort type and sorting rule of result.
@property (nonatomic) enum NTAdministrativeSort sortBy;

/// Initializes an NTAdministrativeParameter object.
///
/// \returns  A New NTAdministrativeParameter Object.
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of administrative.
SWIFT_CLASS("_TtC9NOSTRASDK22NTAdministrativeResult")
@interface NTAdministrativeResult : NTResult

/// Code of province or district or sub district that depend on the parameter sent.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified code;

/// Name of province or district or sub district in Local language that depend on the parameter sent.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name_L;

/// Name of province or district or sub district in English that depend on the parameter sent.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name_E;

/// Bottom-left X-coordinate of an extent envelope.
@property (nonatomic, readonly) double xmin;

/// Top-right X-coordinate of an extent envelope.
@property (nonatomic, readonly) double xmax;

/// Bottom-left Y-coordinate of an extent envelope.
@property (nonatomic, readonly) double ymin;

/// Top-right Y-coordinate of an extent envelope.
@property (nonatomic, readonly) double ymax;

/// A center latitude of administrative
@property (nonatomic, readonly) double lat;

/// A center longitude of administrative.
@property (nonatomic, readonly) double lon;
@end



/// A set of result returns form NTAdministrativeService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTAdministrativeResultSet")
@interface NTAdministrativeResultSet : NTResult

/// A set of administrative result.
@property (nonatomic, readonly, copy) NSArray<NTAdministrativeResult *> * _Nullable results;
@end



/// This service is the administrative boundary (Sub District, District, and Province) inquiry service by receiving Ministry of Interior certified administrative boundary code and returning back results to user.
SWIFT_CLASS("_TtC9NOSTRASDK23NTAdministrativeService")
@interface NTAdministrativeService : NTService

/// Execute a parameter against the administrative service. It relies on administrative service of the web service API. The result returns a set of location matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of administrative information matching specifced creteria.
+ (NTAdministrativeResultSet * _Nullable)execute:(NTAdministrativeParameter * _Null_unspecified)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the administrative service. It relies on administrative service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the administrative service has completely loaded.
/// The method also be called when the weather service has error.
/// This block has a set of administrative information and an information about the error returned by the service.
+ (void)executeAsync:(NTAdministrativeParameter * _Null_unspecified)param Completion:(void (^ _Nonnull)(NTAdministrativeResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// An option of AdministrativeService property
typedef SWIFT_ENUM(NSInteger, NTAdministrativeSort) {

/// Results of Administrative is sorted by code.
  NTAdministrativeSortCode = 0,

/// Results of Administrative is sorted by localized name.
  NTAdministrativeSortName_L = 1,

/// Results of Administrative is sorted by English name.
  NTAdministrativeSortName_E = 2,
};



/// Instances of this class represent parameters for NTAutocompleteService. Parameters specify the criteria for performing a keyword matching. Parameters are passed as an argument to execute: or executeAsync:Completion on NTAutocompleteService.
SWIFT_CLASS("_TtC9NOSTRASDK23NTAutocompleteParameter")
@interface NTAutocompleteParameter : NTParameter

/// A term to be matched with NOSTRA place name, address, road name or etc.
@property (nonatomic, copy) NSString * _Nullable keyword;

/// A number of result that will receive from service. Maximum value is specified by NOSTRA.
@property (nonatomic) NSInteger numReturn;

/// A country that you would like to find location.
@property (nonatomic) enum NTCountry country;

/// Number of Page.
@property (nonatomic) NSInteger pageNumber;

/// Initializes an NTAutocompleteParameter object.
///
/// \param keyword A term to be matched with NOSTRA place name, address, road name or etc.
///
/// \returns  A New NTAutocompleteParameter Object.
- (nonnull instancetype)initWithKeyword:(NSString * _Null_unspecified)keyword OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of autocomplete service.
SWIFT_CLASS("_TtC9NOSTRASDK20NTAutocompleteResult")
@interface NTAutocompleteResult : NTResult

/// Place’s name.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name;
@end



/// A set of result returns from NTAutocompleteService.
SWIFT_CLASS("_TtC9NOSTRASDK23NTAutocompleteResultSet")
@interface NTAutocompleteResultSet : NTResult

/// A set of result.
@property (nonatomic, readonly, copy) NSArray<NTAutocompleteResult *> * _Nullable results;
@end



/// This service allows you to let your applications suggest keywords for users to search for places. You can apply this service to create keyword suggestion feature in location search function for better user experience. All AEC countries are supported.
SWIFT_CLASS("_TtC9NOSTRASDK21NTAutocompleteService")
@interface NTAutocompleteService : NTService

/// Execute a parameter against the autocomplete service. It relies on autocomplete service of the web service API. The result returns a set of location matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of keyword matching specifced creteria.
+ (NTAutocompleteResultSet * _Nullable)execute:(NTAutocompleteParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the autocomplete service. It relies on autocomplete service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the autocomplete service has completely loaded.
/// The method also be called when the autocomplete service has error.
/// This block has a set of keyword and an information about the error returned by the service.
+ (void)executeAsync:(NTAutocompleteParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTAutocompleteResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of category
SWIFT_CLASS("_TtC9NOSTRASDK16NTCategoryResult")
@interface NTCategoryResult : NTResult

/// Code of category.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified code;

/// Name of category in local laguage.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name_L;

/// Name of category in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name_E;
@end



/// A set of result returns from NTCategoryService.
SWIFT_CLASS("_TtC9NOSTRASDK19NTCategoryResultSet")
@interface NTCategoryResultSet : NTResult

/// A set of result
@property (nonatomic, readonly, copy) NSArray<NTCategoryResult *> * _Null_unspecified results;
@end



/// This service is the POI categories inquiry service by receiving a request, then service will return the list of all POI categories to user for using with other NOSTRA services such as Location search
SWIFT_CLASS("_TtC9NOSTRASDK17NTCategoryService")
@interface NTCategoryService : NTService

/// Execute the catgory service. It relies on catgory service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of catgory.
+ (NTCategoryResultSet * _Nullable)executeAndReturnError:(NSError * _Nullable * _Null_unspecified)error;

/// Execute the category service. It relies on category service of the web service API.
///
/// \param Completion Block call when the category service has completely loaded.
/// The method also be called when the category service has error.
/// This block has a set of category and an information about the error returned by the service.
+ (void)executeAsync:(void (^ _Nonnull)(NTCategoryResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


@class NTDirection;
@class NTStop;


/// A result of route returns from NTRouteService.
SWIFT_CLASS("_TtC9NOSTRASDK13NTRouteResult")
@interface NTRouteResult : NTResult

/// Total time of returned route.
@property (nonatomic, readonly) double totalTime;

/// Total length of returned route.
@property (nonatomic, readonly) double totalLength;

/// A set of features which described route directions.
@property (nonatomic, readonly, copy) NSArray<NTDirection *> * _Nullable directions;

/// A set of route which contains route paths. Each path is made up of an array of two or more points.
@property (nonatomic, readonly, copy) NSArray<NSArray<NSArray<NSNumber *> *> *> * _Nonnull route;

/// An set of describe stops.
@property (nonatomic, readonly, copy) NSArray<NTStop *> * _Null_unspecified stops;

/// Indicate if route result includes toll roads, “false” returned if not includes.
@property (nonatomic, readonly) BOOL useTollRoad;

/// A method provide for getting path object.
- (NSDictionary * _Nonnull)getShape;
@end



/// A result of closest facility.
SWIFT_CLASS("_TtC9NOSTRASDK23NTClosestFacilityResult")
@interface NTClosestFacilityResult : NTRouteResult

/// A name of facility
@property (nonatomic, readonly, copy) NSString * _Null_unspecified facilityName;

/// A rank of facility
@property (nonatomic, readonly) NSInteger facilityRank;
@end



/// A result of closest facility return from NTClosestFacilityService.
SWIFT_CLASS("_TtC9NOSTRASDK26NTClosestFacilityResultSet")
@interface NTClosestFacilityResultSet : NTResult

/// A set of closest facility result.
@property (nonatomic, readonly, copy) NSArray<NTClosestFacilityResult *> * _Nullable closestFacilities;
@end



/// This service allows you to find closest facilities around any location (incident) on road network by specify how many to find and whether the direction of travel is toward or away from them. For examples of closest facility problems, finding the closest hospital to an accident, the closest police cars to a crime scene, and the closest store to a customer's address. Once you've found the closest facilities, you can display the best route to or from them, return the travel cost for each route, and display directions to each facility. In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
SWIFT_CLASS("_TtC9NOSTRASDK24NTClosestFacilityService")
@interface NTClosestFacilityService : NTService

/// Execute a parameter against the closest facility service. It relies on closest facility service of the web service API. The result returns a set of closest facility matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of closest facility matching specifced creteria.
+ (NTClosestFacilityResultSet * _Nullable)execute:(NTClosestFacilityParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the closest facility service. It relies on closest facility service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the closest facility service has completely loaded.
/// The method also be called when the closest facility service has error.
/// This block has a set of closest facility and an information about the error returned by the service.
+ (void)executeAsync:(NTClosestFacilityParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTClosestFacilityResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// The AEC country that's provided by NOSTRA
typedef SWIFT_ENUM(NSInteger, NTCountry) {

/// Brunei.
  NTCountryBrunei = 0,

/// Cambodia.
  NTCountryCambodia = 1,

/// Indonesia.
  NTCountryIndonesia = 2,

/// Laos.
  NTCountryLaos = 3,

/// Malaysia.
  NTCountryMalaysia = 4,

/// Myamar.
  NTCountryMyamar = 5,

/// Singapore.
  NTCountrySingapore = 6,

/// Thailand.
  NTCountryThailand = 7,

/// Vietnam.
  NTCountryVietnam = 8,
};



/// A describe stops.
SWIFT_CLASS("_TtC9NOSTRASDK11NTDirection")
@interface NTDirection : NTResult

/// The time to travel along the route segment.
@property (nonatomic, readonly) double time;

/// The length of the route segment.
@property (nonatomic, readonly) double length;

/// The direction text. Local language is default value.
@property (nonatomic, readonly, copy) NSString * _Nullable text;

/// The type of maneuver that the direction represents.
@property (nonatomic, readonly, copy) NSString * _Nullable maneuverType;

/// An object which contains latitude and longitude of each starting point of direction.
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Null_unspecified point;
@end



/// A result of NTDynamicContentListService.
SWIFT_CLASS("_TtC9NOSTRASDK26NTDynamicContentListResult")
@interface NTDynamicContentListResult : NTResult

/// Dynamic layer ID.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified layerId;

/// Dynamic layer name in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name_L;

/// Dynamic layer name in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name_E;

/// Dynamic layer detail in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified detail_L;

/// Dynamic layer detail in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified detail_E;

/// Expiry date of layer.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified expireDate;

/// Create date of layer.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified createDate;
@end



/// A set of result that's returned from NTDynamicContentListService.
SWIFT_CLASS("_TtC9NOSTRASDK29NTDynamicContentListResultSet")
@interface NTDynamicContentListResultSet : NTResult

/// A set of dynamic content list.
@property (nonatomic, readonly, copy) NSArray<NTDynamicContentListResult *> * _Nullable results;
@end



/// This service provides list of dynamic content limit by user authorization level, each dynamic content has a layer ID to request for its information.
SWIFT_CLASS("_TtC9NOSTRASDK27NTDynamicContentListService")
@interface NTDynamicContentListService : NTService

/// Execute a parameter against the dynamic content list service. It relies on dynamic content list service of the web service API.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of content list.
+ (NTDynamicContentListResultSet * _Nullable)executeAndReturnError:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the dynamic content list service. It relies on dynamic content list service of the web service API.
///
/// \param Completion Block call when the dynamic content list service has completely loaded.
/// The method also be called when the dynamic content list service has error.
/// This block has a set of content list and an information about the error returned by the service.
+ (void)executeAsync:(void (^ _Nonnull)(NTDynamicContentListResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum NTDynamicContentSort : NSInteger;


/// Instances of this class represent parameters for NTDynamicContentService. Parameters specify the criteria for performing a dynamic content. Parameters are passed as an argument to execute: or executeAsync:Completion on NTDynamicContentService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTDynamicContentParameter")
@interface NTDynamicContentParameter : NTParameter

/// An id of dynamic layer that you can get from NTDynamicLayerService.
@property (nonatomic, copy) NSString * _Null_unspecified layerId;

/// A latitude of point in decimal degree.
@property (nonatomic) double lat;

/// A longitude of point in decimal degree.
@property (nonatomic) double lon;

/// A number of results that you will be able to receive from service. Maximum value is specified by NOSTRA.
@property (nonatomic) NSInteger numReturn;

/// Number of Page.
@property (nonatomic) NSInteger pageNumber;

/// A distance (in kilometer) within latitude (Lat) and longitude (Lon) parameter.
@property (nonatomic) NSInteger radius;

/// Sort type and sorting rule of result.
@property (nonatomic) enum NTDynamicContentSort sortBy;

/// Initializes an NTLocationSearchParameter object.
///
/// \param layerId An id of dynamic layer that you can get from NTDynamicLayerService.
///
/// \param lat A latitude of point in decimal degree.
///
/// \param lon A longitude of point in decimal degree.
///
/// \param sortBy Sort type and sorting rule of result.
///
/// \param pageNumber Number of Page.
///
/// \returns  A New NTLocationSearchParameter Object.
- (nonnull instancetype)initWithLayerId:(NSString * _Nonnull)layerId lat:(double)lat lon:(double)lon OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of NTDynamicContentService.
SWIFT_CLASS("_TtC9NOSTRASDK22NTDynamicContentResult")
@interface NTDynamicContentResult : NTResult

/// Additional information about POI or event in English
@property (nonatomic, readonly, copy) NSString * _Null_unspecified addInfo_E;

/// Additional information about POI or event in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified addInfo_L;

/// Address detail in English
@property (nonatomic, readonly, copy) NSString * _Null_unspecified address_E;

/// Address detail in local language
@property (nonatomic, readonly, copy) NSString * _Null_unspecified address_L;

/// Description of POI or event in English
@property (nonatomic, readonly, copy) NSString * _Null_unspecified detail_E;

/// Description of POI or event in local language
@property (nonatomic, readonly, copy) NSString * _Null_unspecified detail_L;

/// Email
@property (nonatomic, readonly, copy) NSString * _Null_unspecified email;

/// End time of event
@property (nonatomic, readonly, copy) NSString * _Null_unspecified endDateTime;

/// Latitude in decimal degree
@property (nonatomic, readonly) double lat;

/// Longitude in decimal degree
@property (nonatomic, readonly) double lon;

/// URL of map icon for displaying on the map
@property (nonatomic, readonly, copy) NSString * _Null_unspecified mapIcon;

/// URL of media thumbnail
@property (nonatomic, readonly, copy) NSString * _Null_unspecified mediaThumbUrl;

/// URL of media such as URL of picture or YouTube video
@property (nonatomic, readonly, copy) NSString * _Null_unspecified mediaUrl;

/// POI name in English
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name_E;

/// POI name in local language
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name_L;

/// POI’s Identifier Number that related to NOSTRA POI data
@property (nonatomic, readonly, copy) NSString * _Null_unspecified nostraId;

/// Source logo
@property (nonatomic, readonly, copy) NSString * _Null_unspecified srcLogo;

/// Source of information
@property (nonatomic, readonly, copy) NSString * _Null_unspecified srcName;

/// Source website URL
@property (nonatomic, readonly, copy) NSString * _Null_unspecified srcUrl;

/// Start time of event
@property (nonatomic, readonly, copy) NSString * _Null_unspecified startDateTime;

/// Tag words for display filtering in English
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tag_E;

/// Tag words for display filtering in local language
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tag_L;

/// Telephone number
@property (nonatomic, readonly, copy) NSString * _Null_unspecified telNo;

/// Updated date
@property (nonatomic, readonly, copy) NSString * _Null_unspecified updateDate;

/// Website URL
@property (nonatomic, readonly, copy) NSString * _Null_unspecified website;
@end



/// A result that's returned from NTDynamicContentService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTDynamicContentResultSet")
@interface NTDynamicContentResultSet : NTResult

/// A set of result.
@property (nonatomic, readonly, copy) NSArray<NTDynamicContentResult *> * _Nullable results;
@end



/// Request for all information of point of interest in the layer ID parameter. You can identify more parameter for specification results, for example latitude, longitude and radius.
SWIFT_CLASS("_TtC9NOSTRASDK23NTDynamicContentService")
@interface NTDynamicContentService : NTService

/// Execute a parameter against the find dynamic content service. It relies on find dynamic content service of the web service API. The result returns a set of content matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of content matching specifced creteria.
+ (NTDynamicContentResultSet * _Nullable)execute:(NTDynamicContentParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the find dynamic content service. It relies on find dynamic content service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the find dynamic content service has completely loaded.
/// The method also be called when the find dynamic content service has error.
/// This block has a set of content and an information about the error returned by the service.
+ (void)executeAsync:(NTDynamicContentParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTDynamicContentResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Sorting option of dynamic content property
typedef SWIFT_ENUM(NSInteger, NTDynamicContentSort) {

/// Ascending distance.
  NTDynamicContentSortDistance_ASC = 0,

/// Descending distance.
  NTDynamicContentSortDistance_DESC = 1,

/// Ascending name
  NTDynamicContentSortName_ASC = 2,

/// Ascending name
  NTDynamicContentSortName_DESC = 3,

/// Ascending time.
  NTDynamicContentSortTime_ASC = 4,

/// Ascending time.
  NTDynamicContentSortTime_DESC = 5,
};



/// An envelope object.
SWIFT_CLASS("_TtC9NOSTRASDK10NTEnvelope")
@interface NTEnvelope : NTResult

/// A spatial reference of envelope
@property (nonatomic, readonly, strong) NTSpatialReference * _Null_unspecified spatialReference;

/// A max of x coordinate.
@property (nonatomic, readonly) double xmax;

/// A min of x coordinate.
@property (nonatomic, readonly) double xmin;

/// A max of y coordinate.
@property (nonatomic, readonly) double ymax;

/// A min of y coordinate.
@property (nonatomic, readonly) double ymin;
@end



/// A food result of NTExtraContentService
SWIFT_CLASS("_TtC9NOSTRASDK18NTExtraContentFood")
@interface NTExtraContentFood : NTResult

/// Seating capacity
@property (nonatomic, readonly, copy) NSString * _Null_unspecified amountTable;

/// Price per person.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified avgPrice;

/// POI’s branch name in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified branch;

/// Service types which are Buffet, Alacarte or Drive Thru
@property (nonatomic, readonly, copy) NSString * _Null_unspecified buffetAlarcarte;

/// Closed day. (special holidays are included)
@property (nonatomic, readonly, copy) NSString * _Null_unspecified closeDay;

/// Closed time.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified closeHr1;

/// Closed time.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified closeHr2;

/// Delivery service (Y=have, N=Not have)
@property (nonatomic, readonly) BOOL delivery;

/// Email of the POI.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified email;

/// Entertainment service in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified entertainmentService_E;

/// Entertainment service in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified entertainmentService_L;

/// Established year.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified establishedYear;

/// Facebook URL.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified facebook;

/// Fax No.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified fax;

/// Floor No.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified floor;

/// Food nationality. (classify by region; ex. asia)
@property (nonatomic, readonly, copy) NSString * _Null_unspecified foodType1;

/// Food Type 1 in English
@property (nonatomic, readonly, copy) NSString * _Null_unspecified foodType1_E;

/// Food Type 1 in local language
@property (nonatomic, readonly, copy) NSString * _Null_unspecified foodType1_L;

/// Food nationality. (classify by country; ex Thai)
@property (nonatomic, readonly, copy) NSString * _Null_unspecified foodType2;

/// Food Type 2 in English
@property (nonatomic, readonly, copy) NSString * _Null_unspecified foodType2_E;

/// Food Type 2 in local language
@property (nonatomic, readonly, copy) NSString * _Null_unspecified foodType2_L;

/// Food nationality. (classify by particular country; ex northern Thai)
@property (nonatomic, readonly, copy) NSString * _Null_unspecified foodType3;

/// Parking.
@property (nonatomic, readonly) BOOL hasParking;

/// Mobile No. #1
@property (nonatomic, readonly, copy) NSString * _Null_unspecified mobile1;

/// Mobile No. #2
@property (nonatomic, readonly, copy) NSString * _Null_unspecified mobile2;

/// POI’s name.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name;

/// POI’s Identifier Number that related to NOSTRA
@property (nonatomic, readonly, copy) NSString * _Null_unspecified nostraId;

/// Opening day.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified openDay1;

/// Opening day 2 (In case of Opening Day have 2 period Ex. Mon.-Fri 8:00 to 17:00, Sat. –Sun open 11:00-19.00)
@property (nonatomic, readonly, copy) NSString * _Null_unspecified openDay2;

/// Opening time.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified openHr1;

/// Opening time. (In case of Opening time have 2 period)
@property (nonatomic, readonly, copy) NSString * _Null_unspecified openHr2;

/// Payment. (Cash / Credit Card)
@property (nonatomic, readonly, copy) NSString * _Null_unspecified paymentMethod;

/// Picture Name No.1
@property (nonatomic, readonly, copy) NSString * _Null_unspecified picture1;

/// Picture Name No.2
@property (nonatomic, readonly, copy) NSString * _Null_unspecified picture2;

/// Picture Name No.3
@property (nonatomic, readonly, copy) NSString * _Null_unspecified picture3;

/// Building name or housing estate name in local language
@property (nonatomic, readonly, copy) NSString * _Null_unspecified placeName_L;

/// Recommended menu in local language
@property (nonatomic, readonly, copy) NSString * _Null_unspecified recommendedMenu_L;

/// Recommended menu in English
@property (nonatomic, readonly, copy) NSString * _Null_unspecified recommendedMenu_E;

/// Restaurant category
@property (nonatomic, readonly, copy) NSString * _Null_unspecified restaurantCategory;

/// Location Type of Restaurant
@property (nonatomic, readonly, copy) NSString * _Null_unspecified restaurantLocate;

/// Restaurant type
@property (nonatomic, readonly, copy) NSString * _Null_unspecified restaurantType;

/// Target group.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified target;

/// Telephone No. #1
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel1;

/// Telephone extension of telephone no. #1
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel1Ext;

/// Telephone No. #2
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel2;

/// Telephone extension of telephone no. #2
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel2Ext;

/// Telephone No. #3
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel3;

/// Telephone extension of telephone no. #3
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel3Ext;

/// Instagram or tweeter URL.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified url1;

/// Instagram or tweeter URL.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified url2;

/// Village name or community name in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified village_L;

/// Official web site of the POI.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified website;

/// Wongnai URL.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified wongnai;

/// Place Zone.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified foodZone;
@end



/// Instances of this class represent parameters for NTExtraContentService. Parameters specify the criteria for performing an extra content of POI. Parameters are passed as an argument to execute: or executeAsync:Completion on NTExtraContentService.
SWIFT_CLASS("_TtC9NOSTRASDK23NTExtraContentParameter")
@interface NTExtraContentParameter : NTParameter

/// An id of POI which are returned from NOSTRA services.
@property (nonatomic, copy) NSString * _Null_unspecified nostraId;

/// Initializes an NTExtraContentParameter object.
///
/// \param nostraId An id of POI which are returned from NOSTRA services.
///
/// \returns  A New NTExtraContentParameter Object.
- (nonnull instancetype)initWithNostraId:(NSString * _Nonnull)nostraId OBJC_DESIGNATED_INITIALIZER;
@end

@class NTExtraContentTravel;


/// A result of NTExtraContentService
SWIFT_CLASS("_TtC9NOSTRASDK20NTExtraContentResult")
@interface NTExtraContentResult : NTResult

/// A set of food result.
@property (nonatomic, readonly, copy) NSArray<NTExtraContentFood *> * _Null_unspecified food;

/// A set of travel result
@property (nonatomic, readonly, copy) NSArray<NTExtraContentTravel *> * _Null_unspecified travel;
@end



/// Additional information about specified location such as open-close time, telephone number, email, etc. The information is maybe difference due to the type of extra content.
SWIFT_CLASS("_TtC9NOSTRASDK21NTExtraContentService")
@interface NTExtraContentService : NTService

/// Execute a parameter against the extra content service. It relies on extra content service of the web service API. The result returns a set of content matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of content matching specifced creteria.
+ (NTExtraContentResult * _Nullable)execute:(NTExtraContentParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the extra content service. It relies on extra content service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the extra content service has completely loaded.
/// The method also be called when the extra content service has error.
/// This block has a result of content and an information about the error returned by the service.
+ (void)executeAsync:(NTExtraContentParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTExtraContentResult * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// A travel result of NTExtraContentService.
SWIFT_CLASS("_TtC9NOSTRASDK20NTExtraContentTravel")
@interface NTExtraContentTravel : NTResult

/// Activity1 in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified activity1_E;

/// Activity1 in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified activity1_L;

/// Activity2 in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified activity2_E;

/// Activity2 in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified activity2_L;

/// Attraction type 1 in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified attraction1_E;

/// Attraction type 1 in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified attraction1_L;

/// Attraction Type 2 in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified attraction2_E;

/// Attraction type 2 in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified attraction2_L;

/// Attraction Type 3 in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified attraction3_E;

/// Attraction Type 3 in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified attraction3_L;

/// POI’s branch name in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified branch;

/// Closed day. (special holidays are included)
@property (nonatomic, readonly, copy) NSString * _Null_unspecified closeDay;

/// Closed time.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified closeHr1;

/// Closed time.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified closeHr2;

/// Email of the POI.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified email;

/// Facebook URL.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified facebook;

/// Fax No.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified fax;

/// Foreign entry fee
@property (nonatomic, readonly, copy) NSString * _Null_unspecified feeFA;

/// Foreign child entry fee
@property (nonatomic, readonly, copy) NSString * _Null_unspecified feeFC;

/// Adult entry fee
@property (nonatomic, readonly, copy) NSString * _Null_unspecified feeTA;

/// Child entry fee
@property (nonatomic, readonly, copy) NSString * _Null_unspecified feeTC;

/// Floor No.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified floor;

/// Highlight of the POI in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified hilight_E;

/// Highlight of the POI in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified hilight_L;

/// POI history in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified history_E;

/// POI history in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified history_L;

/// Mobile No. #1
@property (nonatomic, readonly, copy) NSString * _Null_unspecified mobile1;

/// Mobile No. #2
@property (nonatomic, readonly, copy) NSString * _Null_unspecified mobile2;

/// POI’s name.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name;

/// POI’s Identifier Number that related to NOSTRA
@property (nonatomic, readonly, copy) NSString * _Null_unspecified nostraId;

/// Opening day.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified openDay1;

/// Opening day 2 (In case of Opening Day have 2 period Ex. Mon.-Fri 8:00 to 17:00, Sat. –Sun open 11:00-19.00)
@property (nonatomic, readonly, copy) NSString * _Null_unspecified openDay2;

/// Opening time.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified openHr1;

/// Opening time. (In case of Opening time have 2 period)
@property (nonatomic, readonly, copy) NSString * _Null_unspecified openHr2;

/// Picture Name No.1
@property (nonatomic, readonly, copy) NSString * _Null_unspecified picture1;

/// Picture Name No.2
@property (nonatomic, readonly, copy) NSString * _Null_unspecified picture2;

/// Picture Name No.3
@property (nonatomic, readonly, copy) NSString * _Null_unspecified picture3;

/// Building name or housing estate name in local language
@property (nonatomic, readonly, copy) NSString * _Null_unspecified placeName_L;

/// Recommendation or suggestion about POI in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified recommend_E;

/// Recommendation or suggestion about POI in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified recommend_L;

/// Suitable season to visit.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified season;

/// Target group of POI
@property (nonatomic, readonly, copy) NSString * _Null_unspecified target;

/// Telephone No. #1
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel1;

/// Telephone extension of telephone no. #1
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel1Ext;

/// Telephone No. #2
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel2;

/// Telephone extension of telephone no. #2
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel2Ext;

/// Telephone No. #3
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel3;

/// Telephone extension of telephone no. #3
@property (nonatomic, readonly, copy) NSString * _Null_unspecified tel3Ext;

/// Instagram or tweeter URL.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified url1;

/// Instagram or tweeter URL.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified url2;

/// Village name or community name in local language.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified village_L;

/// Official web site of the POI.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified website;

/// Place Zone.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified travelZone;
@end


/// A Traveling to or from the facility.
typedef SWIFT_ENUM(NSInteger, NTFacilityDirection) {

/// A travel direction from the facility results.
  NTFacilityDirectionfromFacility = 0,

/// A travel direction to facility results.
  NTFacilityDirectiontoFacility = 1,
};



/// Instances of this class represent parameters for NTFuelService. Parameters specify the criteria for performing a result of fuel prices. Parameters are passed as an argument to execute: or executeAsync:Completion on NTFuelService.
SWIFT_CLASS("_TtC9NOSTRASDK15NTFuelParameter")
@interface NTFuelParameter : NTParameter

/// Refer to province code. You can get Thailand province code.
@property (nonatomic, copy) NSString * _Null_unspecified adminLevel1;

/// Refer to district code. You can get Thailand district code.
@property (nonatomic, copy) NSString * _Null_unspecified adminLevel2;

/// Latitude of point in decimal degree.
@property (nonatomic) double lat;

/// Longitude of point in decimal degree.
@property (nonatomic) double lon;

/// Initializes an NTFuelParameter object.
///
/// \param adminLevel1 Refer to province code. You can get Thailand province code.
///
/// \param adminLevel2 Refer to district code. You can get Thailand district code.
///
/// \returns  A New NTFuelParameter Object.
- (nonnull instancetype)initWithAdminLevel1:(NSString * _Null_unspecified)adminLevel1 adminLevel2:(NSString * _Null_unspecified)adminLevel2 OBJC_DESIGNATED_INITIALIZER;

/// Initializes an NTFuelParameter object.
///
/// \param lat Latitude of point in decimal degree.
///
/// \param lon Longitude of point in decimal degree.
///
/// \returns  A New NTFuelParameter Object.
- (nonnull instancetype)initWithLat:(double)lat lon:(double)lon OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of fuel prices.
SWIFT_CLASS("_TtC9NOSTRASDK12NTFuelResult")
@interface NTFuelResult : NTResult

/// Fuel brand in Thailand.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified brand;

/// Brand name in English.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified brandName_E;

/// Brand name in Thai.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified brandName_L;

/// Diesel price.
@property (nonatomic, readonly) double diesel;

/// Premium diesel price.
@property (nonatomic, readonly) double dieselPremium;

/// Gasohol 91 price.
@property (nonatomic, readonly) double gasohol91;

/// Gasohol 95 price.
@property (nonatomic, readonly) double gasohol95;

/// Gasohol E20 price.
@property (nonatomic, readonly) double gasoholE20;

/// Gasohol E85 price.
@property (nonatomic, readonly) double gasoholE85;

/// Gasoline 91 price.
@property (nonatomic, readonly) double gasoline91;

/// Gasoline95	Gasoline 95 price.
@property (nonatomic, readonly) double gasoline95;

/// NGV price.
@property (nonatomic, readonly) double NGV;
@end



/// A set of result returns from NTFuelService.
SWIFT_CLASS("_TtC9NOSTRASDK15NTFuelResultSet")
@interface NTFuelResultSet : NTResult

/// A set of results
@property (nonatomic, readonly, copy) NSArray<NTFuelResult *> * _Nullable results;
@end



/// This service is the fuel price inquiry service by receiving Ministry of Interior certified administrative boundary code or coordinate, then service will return the details of fuel price of each brand to user.This service is available in Thailand only.
SWIFT_CLASS("_TtC9NOSTRASDK13NTFuelService")
@interface NTFuelService : NTService

/// Execute a parameter against the fuel service. It relies on fuel service of the web service API. The result returns a set of location matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of fule price of fuel matching specifced creteria.
+ (NTFuelResultSet * _Nullable)execute:(NTFuelParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the weather service. It relies on weather service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the weather service has completely loaded.
/// The method also be called when the weather service has error.
/// This block has a set of fuel price and an information about the error returned by the service.
+ (void)executeAsync:(NTFuelParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTFuelResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Instances of this class represent parameters for NTIdentifyService. Parameters specify the criteria  according to which country should be identified in the map. Parameters are passed as an argument to execute: or executeAsync:Completion on NTIdentifyService.
SWIFT_CLASS("_TtC9NOSTRASDK26NTIdentifyCountryParameter")
@interface NTIdentifyCountryParameter : NTParameter

/// Latitude of point in decimal degree.
@property (nonatomic) double lat;

/// Longitude of point in decimal degree.
@property (nonatomic) double lon;

/// Initializes an NTIdentifyCountryParameter object.
///
/// \param lat Latitude of point in decimal degree.
///
/// \param lon Longitude of point in decimal degree.
///
/// \returns  A New NTIdentifyCountryParameter Object.
- (nonnull instancetype)initWithLat:(double)lat lon:(double)lon OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of country returns from NTIdentifyCountryService.
SWIFT_CLASS("_TtC9NOSTRASDK23NTIdentifyCountryResult")
@interface NTIdentifyCountryResult : NTResult

/// Country code.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified countryCode;
@end



/// This service can help you to get country code by latitude and longitude.
SWIFT_CLASS("_TtC9NOSTRASDK24NTIdentifyCountryService")
@interface NTIdentifyCountryService : NTService

/// Execute a parameter against the identify country service. It relies on identiy country service of the web service API. The result returns only one of country matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of POI matching specifced creteria.
+ (NTIdentifyCountryResult * _Nullable)execute:(NTIdentifyCountryParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the identify service. It relies on identiy country service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the identify service has completely loaded.
/// The method also be called when the identify service has error.
/// This block has a POI result and an information about the error returned by the service.
+ (void)executeAsync:(NTIdentifyCountryParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTIdentifyCountryResult * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// Instances of this class represent parameters for NTIdentifyService. Parameters specify the criteria  according to which place should be identified in the map. Parameters are passed as an argument to execute: or executeAsync:Completion on NTIdentifyService.
SWIFT_CLASS("_TtC9NOSTRASDK19NTIdentifyParameter")
@interface NTIdentifyParameter : NTParameter

/// Country code.
@property (nonatomic) enum NTCountry country;

/// Latitude of point in decimal degree.
@property (nonatomic) double lat;

/// Longitude of point in decimal degree.
@property (nonatomic) double lon;

/// Initializes an NTIdentifyParameter object.
///
/// \param lat Latitude of point in decimal degree.
///
/// \param lon Longitude of point in decimal degree.
///
/// \returns  A New NTIdentifyParameter Object.
- (nonnull instancetype)initWithLat:(double)lat lon:(double)lon OBJC_DESIGNATED_INITIALIZER;
@end



/// A NTPOI object.
SWIFT_CLASS("_TtC9NOSTRASDK5NTPOI")
@interface NTPOI : NTResult

/// Admin level 1 name in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel1_E;

/// Admin level 1 name in local language.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel1_L;

/// Admin level 2 name in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel2_E;

/// Admin level 2 name in local language.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel2_L;

/// Admin level 3 name in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel3_E;

/// Admin level 3 name in local language.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel3_L;

/// Admin level 4 name in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel4_E;

/// Admin level 4 name in local language.
@property (nonatomic, readonly, copy) NSString * _Nonnull adminLevel4_L;

/// Branch in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull brand_E;

/// Branch in Local language.
@property (nonatomic, readonly, copy) NSString * _Nonnull brand_T;

/// Local category’s name of POI.
@property (nonatomic, readonly, copy) NSString * _Nonnull localCategoryCode;

/// Category’s name of POI.
@property (nonatomic, readonly, copy) NSString * _Nonnull categoryCode;

/// House number.
@property (nonatomic, readonly, copy) NSString * _Nonnull houseNo;

/// Location name in English.
@property (nonatomic, readonly, copy) NSString * _Nonnull name_E;

/// Location name in Local language.
@property (nonatomic, readonly, copy) NSString * _Nonnull name_L;

/// Result’s order.
@property (nonatomic, readonly) NSInteger no;

/// ID of data.
@property (nonatomic, readonly, copy) NSString * _Nonnull nostraId;

/// Postcode.
@property (nonatomic, readonly, copy) NSString * _Nonnull postcode;

/// Telephone number.
@property (nonatomic, readonly, copy) NSString * _Nonnull telephone;

/// Distance from input location in km.
@property (nonatomic, readonly) double distance;
@end



/// A result of POI returns from NTIndentifyService.
SWIFT_CLASS("_TtC9NOSTRASDK16NTIdentifyResult")
@interface NTIdentifyResult : NTPOI
@end



/// This service is the process of converting geographic coordinates into an address. One coordinate of latitude and longitude is processed at a time and returned nearest landmark information. In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
SWIFT_CLASS("_TtC9NOSTRASDK17NTIdentifyService")
@interface NTIdentifyService : NTService

/// Execute a parameter against the identfy service. It relies on identiy service of the web service API. The result returns only one of POI matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of POI matching specifced creteria.
+ (NTIdentifyResult * _Nullable)execute:(NTIdentifyParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the identify service. It relies on identiy service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the identify service has completely loaded.
/// The method also be called when the identify service has error.
/// This block has a POI result and an information about the error returned by the service.
+ (void)executeAsync:(NTIdentifyParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTIdentifyResult * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A mode of impledace that's provided for parameter of NTRouteService, NTClostestFacilityService, NTServiceAreaService, NTAGSRouteService, NTAGSClostestFacilityService and NTAGSServiceAreaService.
typedef SWIFT_ENUM(NSInteger, NTImpedanceMode) {

/// The quickest driving time.
  NTImpedanceModeDistance = 0,

/// The shortest route.
  NTImpedanceModeTime = 1,
};


/// The language of results.
typedef SWIFT_ENUM(NSInteger, NTLanguage) {

/// English language.
  NTLanguageEnglish = 0,

/// Local language.
  NTLanguageLocale = 1,
};

enum NTLocalCategorySort : NSInteger;


/// Instances of this class represent parameters for NTLocalCategoryService. Parameters specify the criteria for performing a weather. Parameters are passed as an argument to execute: or executeAsync:Completion on NTWeatherService.
SWIFT_CLASS("_TtC9NOSTRASDK24NTLocalCategoryParameter")
@interface NTLocalCategoryParameter : NTParameter

/// A country that you would like to find location.
@property (nonatomic) enum NTCountry country;

/// Sort type and sorting rule of result.
@property (nonatomic) enum NTLocalCategorySort sortBy;

/// Initializes an NTLocalCategoryParameter object.
///
/// \param country A country that you would like to find location.
///
/// \param sortBy Sort type and sorting rule of result.
///
/// \returns  A New NTLocalCategoryParameter Object.
- (nonnull instancetype)initWithCountry:(enum NTCountry)country sortBy:(enum NTLocalCategorySort)sortBy OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of local category.
SWIFT_CLASS("_TtC9NOSTRASDK21NTLocalCategoryResult")
@interface NTLocalCategoryResult : NTResult

/// Code of category.
@property (nonatomic, readonly, copy) NSString * _Nullable categoryCode;

/// Code of local category.
@property (nonatomic, readonly, copy) NSString * _Nullable localCategoryCode;

/// Name of category in local language.
@property (nonatomic, readonly, copy) NSString * _Nullable name_L;

/// Name of category in English.
@property (nonatomic, readonly, copy) NSString * _Nullable name_E;
@end



/// A set of result returns form NTLocalCategoryService.
SWIFT_CLASS("_TtC9NOSTRASDK24NTLocalCategoryResultSet")
@interface NTLocalCategoryResultSet : NTResult

/// A set of result.
@property (nonatomic, readonly, copy) NSArray<NTLocalCategoryResult *> * _Null_unspecified results;
@end



/// This service is the POI local categories inquiry service by receiving a request, then service will return the list of all POI local categories to user for using with other NOSTRA services such as Location search
SWIFT_CLASS("_TtC9NOSTRASDK22NTLocalCategoryService")
@interface NTLocalCategoryService : NTService

/// Execute a parameter against the local category service. It relies on local category service of the web service API. The result returns a set of location matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of local category matching specifced creteria.
+ (NTLocalCategoryResultSet * _Nullable)execute:(NTLocalCategoryParameter * _Null_unspecified)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the local category service. It relies on local category service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the local category service has completely loaded.
/// The method also be called when the local category service has error.
/// This block has a set of local category and an information about the error returned by the service.
+ (void)executeAsync:(NTLocalCategoryParameter * _Null_unspecified)param Completion:(void (^ _Nonnull)(NTLocalCategoryResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// Sorting of local category service property
typedef SWIFT_ENUM(NSInteger, NTLocalCategorySort) {

/// Sort by category code.
  NTLocalCategorySortCatCode = 0,

/// Sort by local category code.
  NTLocalCategorySortLocalCatCode = 1,

/// Sort by local name.
  NTLocalCategorySortName_L = 2,

/// Sort by english name.
  NTLocalCategorySortName_E = 3,
};



/// Instances of this class represent parameters for NTRouteParameter, NTClosestFacilityParameter, NTServiceAreaParameter, NTRouteParameter, NTClosestFacilityParameter, NTServiceAreaParameter and NTLocation.
SWIFT_CLASS("_TtC9NOSTRASDK10NTLocation")
@interface NTLocation : NTParameter

/// A name of location.
@property (nonatomic, copy) NSString * _Null_unspecified name;

/// A latitude of point in decimal degree.
@property (nonatomic) double lat;

/// A longitude of point in decimal degree.
@property (nonatomic) double lon;

/// Opening time of waypoint (support only NTRouteService and NTAGSRouteService).
@property (nonatomic, strong) NSDate * _Nullable timeWindowStart;

/// Closing time of waypoint (support only NTRouteService and NTAGSRouteService).
@property (nonatomic, strong) NSDate * _Nullable timeWindowEnd;

/// Expected service time in minutes at location (support only NTRouteService and NTAGSRouteService).
@property (nonatomic) NSInteger serviceTime;

/// Initializes an NTLocation object.
///
/// \param name A name of location.
///
/// \param lat A latitude of point in decimal degree.
///
/// \param lon A longitude of point in decimal degree.
///
/// \returns  A New NTLocation Object.
- (nonnull instancetype)initWithName:(NSString * _Null_unspecified)name lat:(double)lat lon:(double)lon OBJC_DESIGNATED_INITIALIZER;
@end



/// Instances of this class represent parameters for NTLocationSearchService. Parameters specify the criteria for performing a searching location. Parameters are passed as an argument to execute: or executeAsync:Completion on NTLocationSearchService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTLocationSearchParameter")
@interface NTLocationSearchParameter : NTParameter

/// Refer to province code. You can get Thailand province code that you can get from NTAdministrativeService.
@property (nonatomic, copy) NSString * _Null_unspecified adminLevel1;

/// Refer to district code. You can get Thailand district code that you can get from NTAdministrativeService.
@property (nonatomic, copy) NSString * _Null_unspecified adminLevel2;

/// Refer to sub district code. You can get Thailand sub district code that you can get from NTAdministrativeService.
@property (nonatomic, copy) NSString * _Null_unspecified adminLevel3;

/// A set of category that you can get from NTCategoryService.
@property (nonatomic, copy) NSArray<NSString *> * _Null_unspecified categoryCode;

/// A set of local category that you can get from NTLocalCategoryService.
@property (nonatomic, copy) NSArray<NSString *> * _Null_unspecified localCategoryCode;

/// A country that you would like to find location.
@property (nonatomic) enum NTCountry country;

/// A term to be matched with NOSTRA place name, address, road name or etc.
@property (nonatomic, copy) NSString * _Null_unspecified keyword;

/// A latitude of point in decimal degree.
@property (nonatomic) double lat;

/// A longitude of point in decimal degree.
@property (nonatomic) double lon;

/// Postcode
@property (nonatomic, copy) NSString * _Null_unspecified postcode;

/// A distance (in kilometer) within latitude (Lat) and longitude (Lon) parameter.
@property (nonatomic) NSInteger radius;

/// A number of results that you will be able to receive from service. Maximum value is specified by NOSTRA.
@property (nonatomic) NSInteger numReturn;

/// Number of Page.
@property (nonatomic) NSInteger pageNumber;

/// Initializes an NTLocationSearchParameter object.
///
/// \param keyword A term to be matched with NOSTRA place name, address, road name or etc.
///
/// \param lat A latitude of point in decimal degree.
///
/// \param lon A longitude of point in decimal degree.
///
/// \returns  A New NTLocationSearchParameter Object.
- (nonnull instancetype)initWithKeyword:(NSString * _Null_unspecified)keyword lat:(double)lat lon:(double)lon OBJC_DESIGNATED_INITIALIZER;

/// Initializes an NTLocationSearchParameter object.
///
/// \param localCategoryCode A set of local category that you can get from NTLocalCategoryService.
///
/// \param lat Latitude of point in decimal degree.
///
/// \param lon Longitude of point in decimal degree.
///
/// \returns  A New NTLocationSearchParameter Object.
- (nonnull instancetype)initWithLocalCategoryCode:(NSArray<NSString *> * _Null_unspecified)localCategoryCode lat:(double)lat lon:(double)lon OBJC_DESIGNATED_INITIALIZER;

/// Initializes an NTLocationSearchParameter object.
///
/// \param localCategoryCode A set of local category that you can get from NTLocalCategoryService.
///
/// \param lat Latitude of point in decimal degree.
///
/// \param lon Longitude of point in decimal degree.
///
/// \returns  A New NTLocationSearchParameter Object.
- (nonnull instancetype)initWithCategoryCode:(NSArray<NSString *> * _Null_unspecified)categoryCode lat:(double)lat lon:(double)lon OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of location returns from NTLocationSearchService.
SWIFT_CLASS("_TtC9NOSTRASDK22NTLocationSearchResult")
@interface NTLocationSearchResult : NTPOI

/// Latitude of location.
@property (nonatomic, readonly) double lat;

/// Longitude of location.
@property (nonatomic, readonly) double lon;

/// Latitude of entrance 1.
@property (nonatomic, readonly) double lat_Route1;

/// Longitude of entrance 1.
@property (nonatomic, readonly) double lon_Route1;

/// Latitude of entrance 2.
@property (nonatomic, readonly) double lat_Route2;

/// Longitude of entrance 2.
@property (nonatomic, readonly) double lon_Route2;

/// Latitude of entrance 3.
@property (nonatomic, readonly) double lat_Route3;

/// Longitude of entrance 3.
@property (nonatomic, readonly) double lon_Route3;

/// Latitude of entrance 4.
@property (nonatomic, readonly) double lat_Route4;

/// Longitude of entrance 4.
@property (nonatomic, readonly) double lon_Route4;

/// Popularity.
@property (nonatomic, readonly) double popularity;
@end



/// A set of result returns from NTLocationSearchService.
SWIFT_CLASS("_TtC9NOSTRASDK25NTLocationSearchResultSet")
@interface NTLocationSearchResultSet : NTResult

/// A set of result
@property (nonatomic, readonly, copy) NSArray<NTLocationSearchResult *> * _Null_unspecified results;
@end



/// This service allows you to search place information in Thailand, also AEC countries. You can query specified area by sending parameters, category or admin level.
SWIFT_CLASS("_TtC9NOSTRASDK23NTLocationSearchService")
@interface NTLocationSearchService : NTService

/// Execute a parameter against the location search service. It relies on location search service of the web service API. The result returns a set of location matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of place matching specifced creteria.
+ (NTLocationSearchResultSet * _Nullable)execute:(NTLocationSearchParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the location search service. It relies on location search service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the location search service has completely loaded.
/// The method also be called when the location search service has error.
/// This block has a set of place and an information about the error returned by the service.
+ (void)executeAsync:(NTLocationSearchParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTLocationSearchResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A type of layers.
typedef SWIFT_ENUM(NSInteger, NTMapLayerType) {

/// Basemap.
  NTMapLayerTypeBasemap = 0,

/// Imagery.
  NTMapLayerTypeImagery = 1,

/// Special layer.
  NTMapLayerTypeSpecialLayer = 2,
};

enum NTMapServiceType : NSInteger;


/// A result of map permission returns from NTMapPermissionService.
SWIFT_CLASS("_TtC9NOSTRASDK21NTMapPermissionResult")
@interface NTMapPermissionResult : NTResult

/// Country code, null if service is supported all countries in AEC.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified countryCode;

/// Service Name.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified serviceName;

/// Service ID.
@property (nonatomic, readonly) NSInteger serviceId;

/// Local map service URL.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified serviceUrl_L;

/// English map service URL.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified serviceUrl_E;

/// Token of local map service.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified serviceToken_L;

/// Token of english map service.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified serviceToken_E;

/// Map service layer type. (Basemap layer or Special layer).
@property (nonatomic, readonly) enum NTMapLayerType layerType;

/// Map service type. For example tiles, dynamic, feature and WMS.
@property (nonatomic, readonly) enum NTMapServiceType mapServiceType;

/// Map graphic type. For example point, line and polygon.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified graphicType;

/// Array that contains service IDs if the map service should be use other service in this lists, null if not.
@property (nonatomic, readonly, copy) NSArray<NSNumber *> * _Null_unspecified dependMap;

/// Sort index number.
@property (nonatomic, readonly) NSInteger sortIndex;

/// Default level of service to zoom in.
@property (nonatomic, readonly) NSInteger defaultLevel;

/// Default zoom point of service that contain latitude and longitude.
@property (nonatomic, readonly, strong) NTPoint * _Null_unspecified defaultZoom;
@end



/// A set of map permission result return from NTMapPermissionService.
SWIFT_CLASS("_TtC9NOSTRASDK24NTMapPermissionResultSet")
@interface NTMapPermissionResultSet : NTResult

/// A set of result
@property (nonatomic, readonly, copy) NSArray<NTMapPermissionResult *> * _Null_unspecified results;
@end



/// This is a core service for map of NOSTRA. You can request to this service after received NOSTRA's key and it will return the list of services that you have permission.
SWIFT_CLASS("_TtC9NOSTRASDK22NTMapPermissionService")
@interface NTMapPermissionService : NTService

/// Execute map permission service. It relies on map permission service of the web service API. The result returns only one of POI matching specificed criteria.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A set of map services.
+ (NTMapPermissionResultSet * _Nullable)executeAndReturnError:(NSError * _Nullable * _Null_unspecified)error;

/// Execute map permission service. It relies on map permission service of the web service API.
///
/// \param Completion Block call when the map permission service has completely loaded.
/// The method also be called when the map permission service has error.
/// This block has a map permission result and an information about the error returned by the service.
+ (void)executeAsync:(void (^ _Nonnull)(NTMapPermissionResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A type of map service.
typedef SWIFT_ENUM(NSInteger, NTMapServiceType) {

/// Tiled map service.
  NTMapServiceTypeTiledMapService = 0,

/// Dynamic map service.
  NTMapServiceTypeDynamicMapService = 1,

/// Feature server service.
  NTMapServiceTypeFeatureService = 2,

/// Web map service
  NTMapServiceTypeWebMapService = 3,

/// Open stree map
  NTMapServiceTypeOpenSteetMap = 4,
};


/// A type of map
typedef SWIFT_ENUM(NSInteger, NTMapType) {

/// Imagery map.
  NTMapTypeimagery = 0,

/// Street map.
  NTMapTypestreetMap = 1,

/// Street map HD.
  NTMapTypestreetMapHD = 2,
};


/// Color need to be defined for marker parameter.
typedef SWIFT_ENUM(NSInteger, NTMarkerType) {

/// Blue color.
  NTMarkerTypeBlue = 0,

/// Green color.
  NTMarkerTypeGreen = 1,

/// Orange color.
  NTMarkerTypeOrange = 2,

/// Pink color.
  NTMarkerTypePink = 3,

/// Purple color.
  NTMarkerTypePurple = 4,

/// Red color.
  NTMarkerTypeRed = 5,

/// White color.
  NTMarkerTypeWhite = 6,

/// Yellow color.
  NTMarkerTypeYellow = 7,
};



/// A NTMultiModalDirection object.
SWIFT_CLASS("_TtC9NOSTRASDK21NTMultiModalDirection")
@interface NTMultiModalDirection : NTResult

/// The direction text of start point.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified startText;

/// The direction text of end point.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified endText;

/// Length of the direction.
@property (nonatomic, readonly) double length;

/// Total drive time of route in minute.
@property (nonatomic, readonly) double time;

/// Transportation type.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified type;

/// Latitude and Longitude of point.
@property (nonatomic, readonly, copy) NSArray * _Nonnull point;

/// Geometric array object which contains route paths. Each path is made up of an array of two or more points.
@property (nonatomic, readonly, copy) NSArray * _Nonnull path;

/// Get mulitimodal shape that's able to integrate with AGSPolyline.
///
/// \returns  A Shape object.
- (NSDictionary<NSString *, id> * _Nonnull)getShape;
@end

@class NTMultiModalRoute;


/// A result of NTMultiModalTransportService.
SWIFT_CLASS("_TtC9NOSTRASDK18NTMultiModalResult")
@interface NTMultiModalResult : NTResult

/// The quickest route result.
@property (nonatomic, readonly, strong) NTMultiModalRoute * _Null_unspecified minute;

/// The shortest route result
@property (nonatomic, readonly, strong) NTMultiModalRoute * _Null_unspecified meter;

/// The suggestion of route result.
@property (nonatomic, readonly, strong) NTMultiModalRoute * _Null_unspecified suggestion;
@end



/// A route of multimodal transport.
SWIFT_CLASS("_TtC9NOSTRASDK17NTMultiModalRoute")
@interface NTMultiModalRoute : NTResult

/// Array of features which described each direction of route.
@property (nonatomic, readonly, copy) NSArray<NTMultiModalDirection *> * _Nullable directions;

/// Length of returned route.
@property (nonatomic, readonly) double length;

/// An error message displayed when an unexpected condition occurs, null if not.
@property (nonatomic, readonly, copy) NSArray<NSString *> * _Null_unspecified messages;

/// An Array of route point.
@property (nonatomic, readonly, copy) NSArray * _Null_unspecified routes;

/// Duration of route in minutes.
@property (nonatomic, readonly) double time;
@end


/// Public transport mode.
typedef SWIFT_ENUM(NSInteger, NTMultiModalTransportMode) {

/// Air Transport
  NTMultiModalTransportModeAir = 0,

/// Airport Rail Link (ARL)
  NTMultiModalTransportModeARL = 1,

/// Bus service by BMTA
  NTMultiModalTransportModeBMTA = 2,

/// River and Canal Transport
  NTMultiModalTransportModeBoat = 3,

/// Bus Rapid Transit (BRT)
  NTMultiModalTransportModeBRT = 4,

/// Bangkok Mass Transit System (BTS)
  NTMultiModalTransportModeBTS = 5,

/// Bus service by Transport Co., Ltd.
  NTMultiModalTransportModeBus = 6,

/// Mass Rapid Transit (MRT)
  NTMultiModalTransportModeMRT = 7,

/// Railway
  NTMultiModalTransportModeRail = 8,
};



/// Instances of this class represent parameters for NTMultiModalTransportService. Parameters specify the criteria for performing a result of route. Parameters are passed as an argument to execute: or executeAsync:Completion on NTMultiModalTransportService.
SWIFT_CLASS("_TtC9NOSTRASDK29NTMultiModalTransportParamter")
@interface NTMultiModalTransportParamter : NTParameter

/// A set of visiting point.
@property (nonatomic, copy) NSArray<NTLocation *> * _Null_unspecified stops;

/// A language of result.
@property (nonatomic) enum NTLanguage language;

/// Initializes an NTRouteParameter object.
///
/// \param stops A set of visiting point.
///
/// \returns  A New NTRouteParameter Object.
- (nonnull instancetype)initWithStops:(NSArray<NTLocation *> * _Null_unspecified)stops OBJC_DESIGNATED_INITIALIZER;

/// Add a travel mode.
///
/// \param travelMode Public transport mode.
- (void)addTravelMode:(enum NTMultiModalTransportMode)travelMode;
@end



/// The Multimodal Transport service allows you to find the best way to get from one location to another by public transportation systems in Thailand which is:
///
/// <ol><li>Air Transport</li><li>Bus service by Transport Co., Ltd.</li><li>Bus service by BMTA</li><li>Bus Rapid Transit (BRT)</li><li>Mass Rapid Transit (MRT)</li><li>Bangkok Mass Transit System (BTS)</li><li>Airport Rail Link (ARL)</li><li>Railway</li><li>River and Canal Transport</li></ol>
SWIFT_CLASS("_TtC9NOSTRASDK28NTMultiModalTransportService")
@interface NTMultiModalTransportService : NTService

/// Execute a parameter against the multimodal transport service. It relies on multimodal transport service of the web service API. The result returns a set of closest facility matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of multimodal transport matching specifced creteria.
+ (NTMultiModalResult * _Nullable)execute:(NTMultiModalTransportParamter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the multimodal transport service. It relies on multimodal transport service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the multimodal transport service has completely loaded.
/// The method also be called when the multimodal transport service has error.
/// This block has a result of multimodal transport and an information about the error returned by the service.
+ (void)executeAsync:(NTMultiModalTransportParamter * _Nonnull)param Completion:(void (^ _Nonnull)(NTMultiModalResult * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end





/// Point
SWIFT_CLASS("_TtC9NOSTRASDK7NTPoint")
@interface NTPoint : NTResult

/// X coordinate
@property (nonatomic, readonly) double x;

/// Y coordinate
@property (nonatomic, readonly) double y;
@end






/// The service allows you to find the best route to get from one location to another or the best way to visit several locations by car, truck, motorcycle, bicycle, or pedestrian. The locations can be specified by using coordinate of points. The best route can be determined for the order of locations as specified by the users. Along with the best route, service provides directions with turn-by-turn text guidance, travel time, and total distance. In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
SWIFT_CLASS("_TtC9NOSTRASDK14NTRouteService")
@interface NTRouteService : NTService

/// Execute a parameter against the route service. It relies on route service of the web service API. The result returns a set of closest facility matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of route matching specifced creteria.
+ (NTRouteResult * _Nullable)execute:(NTRouteParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the route service. It relies on route service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the route service has completely loaded.
/// The method also be called when the route service has error.
/// This block has a result of route and an information about the error returned by the service.
+ (void)executeAsync:(NTRouteParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTRouteResult * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// A class representing the NOSTRA SDK Environment.
SWIFT_CLASS("_TtC9NOSTRASDK16NTSDKEnvironment")
@interface NTSDKEnvironment : NSObject

/// This method provide for set SDK environment.
///
/// \param apiKey A NOSTRA API key.
+ (void)setAPIKey:(NSString * _Null_unspecified)apiKey;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end




/// A NTServiceAreaAttribute object.
SWIFT_CLASS("_TtC9NOSTRASDK22NTServiceAreaAttribute")
@interface NTServiceAreaAttribute : NTResult

/// Route ID.
@property (nonatomic, readonly) NSInteger objectId;

/// Route name.
@property (nonatomic, readonly) NSInteger facilityId;

/// The name of the service area polygon is based on the name of the associated facility and the break range; for instance, Location1: 0.0 – 5.0 would represent a polygon that covers all traversable edges within five minutes of facility Location1.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name;

/// The lower bound of the polygon's break range.
@property (nonatomic, readonly) NSInteger fromBreak;

/// The upper bound of the polygon's break range.
@property (nonatomic, readonly) NSInteger toBreak;

/// The geometric length of the feature.
@property (nonatomic, readonly) double shapeArea;

/// The geometric area of the feature.
@property (nonatomic, readonly) double shapeLength;
@end




/// A result of NTServiceAreaService
SWIFT_CLASS("_TtC9NOSTRASDK19NTServiceAreaResult")
@interface NTServiceAreaResult : NTResult

/// An attribute of service area.
@property (nonatomic, readonly, strong) NTServiceAreaAttribute * _Null_unspecified attributes;

/// An array of rings. Each ring is represented as an array of points. The first point of each ring is always the same as the last point. And each point in the ring is represented as a 2-element array. The 0-index is the x-coordinate and the 1-index is the y-coordinate.
@property (nonatomic, readonly, copy) NSArray<NSArray<NSArray<NSNumber *> *> *> * _Nonnull rings;

/// Get ring of area that's able to integrate with AGSPolygon.
///
/// \returns  A shape of area.
- (NSDictionary<NSString *, id> * _Nonnull)getShape;
@end



/// A set of result is returned from NTServiceAreaService
SWIFT_CLASS("_TtC9NOSTRASDK22NTServiceAreaResultSet")
@interface NTServiceAreaResultSet : NTResult

/// A set of service area
@property (nonatomic, copy) NSArray<NTServiceAreaResult *> * _Null_unspecified results;
@end



/// This service allows you to find service areas around any location on a road network. For instance, the 30-minute service area for a facility includes all the streets that can be reached within 30 minutes from that facility. These areas are generally used to visualize and measure the ability of facility for serving users or customers. Once service areas are created, you can apply them for identifying how many areas, how many people, or how much of anything else is within that area. In case you have been authorized to use AEC countries you can search by latitude and longtitude of them.
SWIFT_CLASS("_TtC9NOSTRASDK20NTServiceAreaService")
@interface NTServiceAreaService : NTService

/// Execute a parameter against the service area service. It relies on service area service of the web service API. The result returns a set of closest facility matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of area matching specifced creteria.
+ (NTServiceAreaResultSet * _Nullable)execute:(NTServiceAreaParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the service area service. It relies on service area service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the service area service has completely loaded.
/// The method also be called when the service area service has error.
/// This block has a result of area and an information about the error returned by the service.
+ (void)executeAsync:(NTServiceAreaParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTServiceAreaResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end

enum NTShortLinkType : NSInteger;


/// Instances of this class represent parameters for NTShortLinkService. Parameters specify the criteria for performing a NOSTRA short link. Parameters are passed as an argument to execute: or executeAsync:Completion on NTShortLinkService.
SWIFT_CLASS("_TtC9NOSTRASDK20NTShortLinkParameter")
@interface NTShortLinkParameter : NTParameter

/// A set of waypoint.
@property (nonatomic, copy) NSArray<NTLocation *> * _Null_unspecified stops;

/// A type of link that NOSTRA Application will be opened.
@property (nonatomic) enum NTShortLinkType linkType;

/// A term to be matched with NOSTRA place name, address, road name or etc.
@property (nonatomic, copy) NSString * _Null_unspecified keyword;

/// Infowindow’s (Callout) description.
@property (nonatomic, copy) NSString * _Null_unspecified desc;

/// Zoom level.
@property (nonatomic) NSInteger level;

/// Basemap types. The following map types are supported: StreetMap, Imagery, LightGray.
@property (nonatomic) enum NTMapType mapType;

/// Travel mode. The following modes are supported: car, motorcycle, bike, and walk. Default mode is car.
@property (nonatomic) enum NTTravelMode travelMode;

/// A language that NOSTRA website is set for NOSTRA website.
@property (nonatomic) enum NTLanguage language;

/// A set of category code that you can get from NTCategoryService
@property (nonatomic, copy) NSArray<NSString *> * _Null_unspecified categoryCode;

/// Initializes an NTShortLinkParameter object.
///
/// \param stops A set of waypoint that we pefer link type as pin if parameter is a waypoint and link type as route, if waypoint is more than one.
///
/// \returns  A New NTShortLinkParameter Object.
- (nonnull instancetype)initWithStops:(NSArray<NTLocation *> * _Null_unspecified)stops OBJC_DESIGNATED_INITIALIZER;

/// Initializes an NTShortLinkParameter object.
///
/// \param keyword A term to be matched with NOSTRA place name, address, road name or etc.
///
/// \returns  A New NTShortLinkParameter Object.
- (nonnull instancetype)initWithKeyword:(NSString * _Null_unspecified)keyword OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of NTShortLinkService
SWIFT_CLASS("_TtC9NOSTRASDK17NTShortLinkResult")
@interface NTShortLinkResult : NTResult

/// A short link
@property (nonatomic, readonly, copy) NSString * _Null_unspecified result;
@end



/// This service allows you to pin your geo-information on the NOSTRA Map website which is https://map.nostramap.com and NOSTRA Map Thailand for mobile.
SWIFT_CLASS("_TtC9NOSTRASDK18NTShortLinkService")
@interface NTShortLinkService : NTService

/// Execute a parameter against the NOSTRA short link service. It relies on NOSTRA short link service of the web service API. The result returns a set of location matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of link matching specifced creteria.
+ (NTShortLinkResult * _Nullable)execute:(NTShortLinkParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the NOSTRA short link service. It relies on NOSTRA short link service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the NOSTRA short link service has completely loaded.
/// The method also be called when the NOSTRA short link service has error.
/// This block has a result of link and an information about the error returned by the service.
+ (void)executeAsync:(NTShortLinkParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTShortLinkResult * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end


/// A type of link that's used in NTShortLinkParameter
typedef SWIFT_ENUM(NSInteger, NTShortLinkType) {

/// Opening NOSTRA's map website and show pin on the map.
  NTShortLinkTypePin = 0,

/// Opening NOSTRA's map website and show search result.
  NTShortLinkTypeSearch = 1,

/// Opening NOSTRA's map website and route on the map.
  NTShortLinkTypeRoute = 2,
};



/// A spatial reference object.
SWIFT_CLASS("_TtC9NOSTRASDK18NTSpatialReference")
@interface NTSpatialReference : NTResult

/// A constant of WGS84
+ (NSInteger)WGS84;

/// A constant of Webmercator
+ (NSInteger)WebMercator;

/// The lastest WKID
@property (nonatomic, readonly) NSInteger lastestWkid;

/// WKID
@property (nonatomic, readonly) NSInteger wkid;
@end



/// Instances of this class represent parameters for NTStaticMapService. Parameters specify the criteria for performing a static map. Parameters are passed as an argument to execute: or executeAsync:Completion on NTStaticMapService.
SWIFT_CLASS("_TtC9NOSTRASDK20NTStaticMapParameter")
@interface NTStaticMapParameter : NTParameter

/// Height of returned image, maximum 2048 pixel, default value is 150 pixel
@property (nonatomic) NSInteger height;

/// Width of returned image, maximum 2048 pixel, default value is 150 pixel
@property (nonatomic) NSInteger width;

/// Latitude of point in decimal degree.
@property (nonatomic) double lat;

/// Longitude of point in decimal degree.
@property (nonatomic) double lon;

/// Zoom level, value between 6-19 defaults at 16.
@property (nonatomic) NSInteger level;

/// Text Displayed inside marker A-Z and 0-9
@property (nonatomic, copy) NSString * _Null_unspecified markerCharacter;

/// Map types. The following map types are supported: StreetMap and StreetMapHD
@property (nonatomic) enum NTMapType mapType;

/// A type of marker. The supported colors is red, green, blue, orange, purple, pink, yellow, white.
@property (nonatomic) enum NTMarkerType markerType;

/// Country code.
@property (nonatomic) enum NTCountry country;

/// A language of map that's generated to image.
@property (nonatomic) enum NTLanguage language;

/// Initializes an NTShortLinkParameter object.
///
/// \param mapType Map types. The following map types are supported: StreetMap and StreetMapHD
///
/// \param lat Latitude of point in decimal degree.
///
/// \param lon Longitude of point in decimal degree.
///
/// \returns  A New NTShortLinkParameter Object.
- (nonnull instancetype)initWithMapType:(enum NTMapType)mapType lat:(double)lat lon:(double)lon OBJC_DESIGNATED_INITIALIZER;
@end

@class NSData;


/// A result of static map returns from NTStaticMapService.
SWIFT_CLASS("_TtC9NOSTRASDK17NTStaticMapResult")
@interface NTStaticMapResult : NTResult

/// A data of image.
@property (nonatomic, readonly, strong) NSData * _Null_unspecified imageData;
@end



/// This service provides map as image PNG file with custom market (point of interest).
SWIFT_CLASS("_TtC9NOSTRASDK18NTStaticMapService")
@interface NTStaticMapService : NTService

/// Execute a parameter against the static map service. It relies on static map service of the web service API. The result returns only one of static map matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of static map matching specifced creteria.
+ (NTStaticMapResult * _Nullable)execute:(NTStaticMapParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute static map service. It relies on static map service of the web service API.
///
/// \param Completion Block call when the static map service has completely loaded.
/// The method also be called when the static map service has error.
/// This block has a static map result and an information about the error returned by the service.
+ (void)executeAsync:(NTStaticMapParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTStaticMapResult * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// A visiting point of interest.
SWIFT_CLASS("_TtC9NOSTRASDK6NTStop")
@interface NTStop : NTResult

/// Route name.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified name;

/// The order in which the stop is visited by the assigned route.
@property (nonatomic, readonly) NSInteger sequence;
@end



/// Instances of this class represent parameters for NTSumPOIService. Parameters specify the criteria for performing a poi summary. Parameters are passed as an argument to execute: or executeAsync:Completion on NTSumPOIService.
SWIFT_CLASS("_TtC9NOSTRASDK17NTSumPOIParameter")
@interface NTSumPOIParameter : NTParameter

/// A set of category code that you would like to quatify.
@property (nonatomic, copy) NSArray<NSString *> * _Null_unspecified categoryCode;

/// A set of local category code that you would like to quatify.
@property (nonatomic, copy) NSArray<NSString *> * _Null_unspecified localCategoryCode;

/// Latitude of point in decimal degree.
@property (nonatomic) double lat;

/// Longitude of point in decimal degree.
@property (nonatomic) double lon;

/// Defines the distance (in kilometer) within latitude (Lat) and longitude (Lon) parameter.
@property (nonatomic) double radius;

/// Country code.
@property (nonatomic) enum NTCountry country;

/// Initializes an NTSumPOIParameter object.
///
/// \param categoryCode A set of category code that you would like to quatify.
///
/// \param lat Latitude of point in decimal degree.
///
/// \param lon Longitude of point in decimal degree.
///
/// \returns  A New NTShortLinkParameter Object.
- (nonnull instancetype)initWithCategoryCode:(NSArray<NSString *> * _Null_unspecified)categoryCode lat:(double)lat lon:(double)lon OBJC_DESIGNATED_INITIALIZER;

/// Initializes an NTSumPOIParameter object.
///
/// \param localCategoryCode A set of local category code that you would like to quatify.
///
/// \param lat Latitude of point in decimal degree.
///
/// \param lon Longitude of point in decimal degree.
///
/// \returns  A New NTShortLinkParameter Object.
- (nonnull instancetype)initWithLocalCategoryCode:(NSArray<NSString *> * _Null_unspecified)localCategoryCode lat:(double)lat lon:(double)lon OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of summary.
SWIFT_CLASS("_TtC9NOSTRASDK14NTSumPOIResult")
@interface NTSumPOIResult : NTResult

/// Order number.
@property (nonatomic, readonly) NSInteger no;

/// Code of category.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified categoryCode;

/// Code of local category.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified localCategoryCode;

/// Summary quantiy of POI group by category.
@property (nonatomic, readonly) NSInteger summary;
@end



/// A set of result returns from NTSumPOIService.
SWIFT_CLASS("_TtC9NOSTRASDK17NTSumPOIResultSet")
@interface NTSumPOIResultSet : NTResult

/// A set of result.
@property (nonatomic, readonly, copy) NSArray<NTSumPOIResult *> * _Null_unspecified results;
@end



/// This service is a summary quantity of POI group by category or local category.
SWIFT_CLASS("_TtC9NOSTRASDK15NTSumPOIService")
@interface NTSumPOIService : NTService

/// Execute a parameter against the sum poi service. It relies on sum poi service of the web service API. The result returns summary of POI matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of POI summary matching specifced creteria.
+ (NTSumPOIResultSet * _Nullable)execute:(NTSumPOIParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the sum poi service. It relies on sum poi service of the web service API. The result returns summary of POI matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the sum poi service has completely loaded.
/// The method also be called when the sum poi service has error.
/// This block has a POI summary and an information about the error returned by the service.
+ (void)executeAsync:(NTSumPOIParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTSumPOIResultSet * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// A NTTemperature object.
SWIFT_CLASS("_TtC9NOSTRASDK13NTTemperature")
@interface NTTemperature : NTResult

/// Average of temperature.
@property (nonatomic, readonly) double Avg;

/// Max of temperature.
@property (nonatomic, readonly) double Max;

/// Min of temperature.
@property (nonatomic, readonly) double Min;
@end


/// Travel mode. The following modes are supported: car, truck, motorcycle, bike, and walk. Default mode is car.
typedef SWIFT_ENUM(NSInteger, NTTravelMode) {

/// Bicycle mode.
  NTTravelModeBicycle = 0,

/// Car mode.
  NTTravelModeCar = 1,

/// Truck mode.
  NTTravelModeTruck = 2,

/// Motocycle mode.
  NTTravelModeMotorCycle = 3,

/// Walk mode.
  NTTravelModeWalk = 4,
};

@class NTWind;


/// A NTWeather object.
SWIFT_CLASS("_TtC9NOSTRASDK9NTWeather")
@interface NTWeather : NTResult

/// A more detail of weather.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified desc;

/// Humidity.
@property (nonatomic, readonly) double humidity;

/// Icon image to represent the weather.
@property (nonatomic, readonly, copy) NSString * _Null_unspecified icon;

/// Air pressure.
@property (nonatomic, readonly) NSInteger pressure;

/// Rainfall (Millimetre)
@property (nonatomic, readonly) double rain;

/// Sea level of location.
@property (nonatomic, readonly) NSInteger seaLevel;

/// Time of the result forecast.
@property (nonatomic, readonly, strong) NSDate * _Null_unspecified timeStamp;

/// The temperature.
@property (nonatomic, readonly, strong) NTTemperature * _Null_unspecified temperature;

/// Wind information.
@property (nonatomic, readonly, strong) NTWind * _Null_unspecified wind;
@end


/// The frequency of time to forecast information to receive.
typedef SWIFT_ENUM(NSInteger, NTWeatherFrequency) {

/// Forecast information at current time.
  NTWeatherFrequencyCurrent = 0,

/// Forecast information every 3 hours within 5 days from now.
  NTWeatherFrequencyDaily = 1,

/// Forecast information daily within 5 days from now.
  NTWeatherFrequencyThreeHours = 2,

/// Forecast information at given timestamp. Optional “Time” parameter must pass.
  NTWeatherFrequencyTimeStamp = 3,
};



/// Instances of this class represent parameters for NTWeatherService. Parameters specify the criteria for performing a weather. Parameters are passed as an argument to execute: or executeAsync:Completion on NTWeatherService.
SWIFT_CLASS("_TtC9NOSTRASDK18NTWeatherParameter")
@interface NTWeatherParameter : NTParameter

/// Latitude of point in decimal degree.
@property (nonatomic) double lat;

/// Longitude of point in decimal degree.
@property (nonatomic) double lon;

/// Date and time to query when frequency is timestamp.
@property (nonatomic, strong) NSDate * _Nullable datetime;

/// The frequency of time to forecast information to receive.
@property (nonatomic) enum NTWeatherFrequency frequency;

/// A range of days between 1-16 when frequency is Daily.
@property (nonatomic) NSInteger interval;

/// Initializes an NTWeatherParameter object.
///
/// \param lat Latitude of point in decimal degree.
///
/// \param lon Longitude of point in decimal degree.
///
/// \param frequency The frequency of time to forecast information to receive.
///
/// \returns  A New NTWeatherParameter Object.
- (nonnull instancetype)initWithLat:(double)lat lon:(double)lon frequency:(enum NTWeatherFrequency)frequency OBJC_DESIGNATED_INITIALIZER;
@end



/// A result of weather returns form NTWeather service.
SWIFT_CLASS("_TtC9NOSTRASDK15NTWeatherResult")
@interface NTWeatherResult : NTResult

/// Location name.
@property (nonatomic, readonly, copy) NSString * _Nullable locationName;

/// An array of weather information at point.
@property (nonatomic, readonly, copy) NSArray<NTWeather *> * _Nullable weather;
@end



/// This services is the Weather Forecasting service by receiving the Date/Time and coordinate (Latitude/Longitude), then service will return the details of weather to user.
SWIFT_CLASS("_TtC9NOSTRASDK16NTWeatherService")
@interface NTWeatherService : NTService

/// Execute a parameter against the weather service. It relies on weather service of the web service API. The result returns a set of location matching specificed criteria.
///
/// \param param Speciific the criteria of the execution.
///
/// \param error Information about the error returned by the service.
///
/// \returns  A result of weather matching specifced creteria.
+ (NTWeatherResult * _Nullable)execute:(NTWeatherParameter * _Nonnull)param error:(NSError * _Nullable * _Null_unspecified)error;

/// Execute a parameter against the weather service. It relies on weather service of the web service API.
///
/// \param param Speciific the criteria of the execution.
///
/// \param Completion Block call when the weather service has completely loaded.
/// The method also be called when the weather service has error.
/// This block has a set of weather and an information about the error returned by the service.
+ (void)executeAsync:(NTWeatherParameter * _Nonnull)param Completion:(void (^ _Nonnull)(NTWeatherResult * _Null_unspecified, NSError * _Null_unspecified))Completion;
- (nonnull instancetype)init OBJC_DESIGNATED_INITIALIZER;
@end



/// A NTWind object.
SWIFT_CLASS("_TtC9NOSTRASDK6NTWind")
@interface NTWind : NTResult

/// wind degrees.
@property (nonatomic, readonly) double degree;

/// speed wind.
@property (nonatomic, readonly) double speed;
@end

#pragma clang diagnostic pop
